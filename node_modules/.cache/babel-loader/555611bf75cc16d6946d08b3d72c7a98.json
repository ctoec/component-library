{"ast":null,"code":"import _toConsumableArray from\"/home/melanie/Code/component-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/home/melanie/Code/component-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/melanie/Code/component-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/home/melanie/Code/component-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import{FormStatus}from'../FormStatus/FormStatus';import{FieldSet}from'../FieldSet/FieldSet';import cx from'classnames';import{FormFieldSet}from'../Form_New';/**\n * Component that wraps a native select element.\n * It also provides for expansion support by showing the expansion below the entire\n * select element.\n */export var Select=function Select(_ref){var id=_ref.id,className=_ref.className,label=_ref.label,hint=_ref.hint,name=_ref.name,_ref$defaultValue=_ref.defaultValue,defaultValue=_ref$defaultValue===void 0?'':_ref$defaultValue,optional=_ref.optional,disabled=_ref.disabled,onChange=_ref.onChange,options=_ref.options,status=_ref.status,_ref$unselectedText=_ref.unselectedText,unselectedText=_ref$unselectedText===void 0?'- Select -':_ref$unselectedText,props=_objectWithoutProperties(_ref,[\"id\",\"className\",\"label\",\"hint\",\"name\",\"defaultValue\",\"optional\",\"disabled\",\"onChange\",\"options\",\"status\",\"unselectedText\"]);var _useState=useState(defaultValue),_useState2=_slicedToArray(_useState,2),selectedItem=_useState2[0],setSelectedItem=_useState2[1];// Wrap the supplied onChange to provide for local state management\nvar _onChange=function _onChange(event){var changedValue=event.target.value;setSelectedItem(changedValue);onChange(event);};return/*#__PURE__*/React.createElement(\"div\",{className:cx('usa-form-group',_defineProperty({},\"usa-form-group--\".concat(status&&status.type),status),className),key:\"\".concat(id,\"-form-group\")},hint&&/*#__PURE__*/React.createElement(\"span\",{className:\"usa-hint text-italic\"},hint),/*#__PURE__*/React.createElement(\"div\",{className:cx({'margin-top-3':!label})}),label&&/*#__PURE__*/React.createElement(\"label\",{className:cx('usa-label',_defineProperty({},\"usa-label--\".concat(status&&status.type),status)),htmlFor:id},label),status&&status.message&&/*#__PURE__*/React.createElement(FormStatus,status),/*#__PURE__*/React.createElement(\"select\",Object.assign({id:id,key:\"\".concat(id,\"-select\"),className:\"usa-select\".concat(status?\" usa-input--\".concat(status.type):''),name:name||'',onChange:_onChange,value:selectedItem,disabled:disabled// Using aria-required to avoid default Chrome behavior\n,\"aria-required\":!optional,\"aria-describedby\":status?status.id:undefined,\"aria-invalid\":status&&status.type==='error'},props),/*#__PURE__*/React.createElement(\"option\",{key:\"\".concat(id,\"-unselected\"),value:\"\"},unselectedText||'- Select -'),options.map(function(option){return/*#__PURE__*/React.createElement(\"option\",{value:option.value,key:\"\".concat(id,\"-\").concat(option.value,\"-option\")},option.text);})),options.map(function(option){var expansion=option.expansion;return/*#__PURE__*/React.createElement(React.Fragment,{key:\"\".concat(id,\"-\").concat(option.value,\"-expansion\")},expansion&&selectedItem===option.value&&/*#__PURE__*/React.createElement(\"div\",{className:\"oec-itemchooser-expansion\"},option.expansion));}));};/**\n * Props for an other option text input wrapped component of type TWrapped,\n * including props for TWrapped\n */ /**\n * Wraps a Select element in a FieldSet and provides a text input when the user\n * selects \"Other\"\n */export var SelectWithOther=function SelectWithOther(_ref2){var id=_ref2.id,labelForSelect=_ref2.labelForSelect,name=_ref2.name,_ref2$defaultValue=_ref2.defaultValue,defaultValue=_ref2$defaultValue===void 0?'':_ref2$defaultValue,otherInputLabel=_ref2.otherInputLabel,otherInputOnChange=_ref2.otherInputOnChange,otherOptionDisplay=_ref2.otherOptionDisplay,onChange=_ref2.onChange,status=_ref2.status,options=_ref2.options,children=_ref2.children,props=_objectWithoutProperties(_ref2,[\"id\",\"labelForSelect\",\"name\",\"defaultValue\",\"otherInputLabel\",\"otherInputOnChange\",\"otherOptionDisplay\",\"onChange\",\"status\",\"options\",\"children\"]);var OTHER_VALUE='__other';var _useState3=useState(defaultValue===OTHER_VALUE),_useState4=_slicedToArray(_useState3,2),showOther=_useState4[0],setShowOther=_useState4[1];var optionsWithOther=[].concat(_toConsumableArray(options),[{text:otherOptionDisplay,value:OTHER_VALUE}]);var _onChange=function _onChange(e){var changedValue=e.target.value;if(changedValue===OTHER_VALUE){setShowOther(true);}else{setShowOther(false);}onChange(e);};var selectElement=/*#__PURE__*/React.createElement(Select,Object.assign({id:id,label:labelForSelect,defaultValue:defaultValue,status:status,onChange:_onChange,options:optionsWithOther},props));if(showOther){var useFormFieldSet=props;if(useFormFieldSet){var formFieldSetProps=props;return/*#__PURE__*/React.createElement(FormFieldSet,formFieldSetProps,selectElement);}var fieldSetProps=props;return/*#__PURE__*/React.createElement(FieldSet,fieldSetProps,selectElement);}return selectElement;};try{// @ts-ignore\nSelect.displayName=\"Select\";// @ts-ignore\nSelect.__docgenInfo={\"description\":\"Component that wraps a native select element.\\nIt also provides for expansion support by showing the expansion below the entire\\nselect element.\",\"displayName\":\"Select\",\"props\":{}};// @ts-ignore\nif(typeof STORYBOOK_REACT_CLASSES!==\"undefined\")// @ts-ignore\nSTORYBOOK_REACT_CLASSES[\"src/components/Select/Select.tsx#Select\"]={docgenInfo:Select.__docgenInfo,name:\"Select\",path:\"src/components/Select/Select.tsx#Select\"};}catch(__react_docgen_typescript_loader_error){}try{// @ts-ignore\nSelectWithOther.displayName=\"SelectWithOther\";// @ts-ignore\nSelectWithOther.__docgenInfo={\"description\":\"Wraps a Select element in a FieldSet and provides a text input when the user\\nselects \\\"Other\\\"\",\"displayName\":\"SelectWithOther\",\"props\":{}};// @ts-ignore\nif(typeof STORYBOOK_REACT_CLASSES!==\"undefined\")// @ts-ignore\nSTORYBOOK_REACT_CLASSES[\"src/components/Select/Select.tsx#SelectWithOther\"]={docgenInfo:SelectWithOther.__docgenInfo,name:\"SelectWithOther\",path:\"src/components/Select/Select.tsx#SelectWithOther\"};}catch(__react_docgen_typescript_loader_error){}","map":{"version":3,"sources":["/home/melanie/Code/component-library/src/components/Select/Select.tsx"],"names":["Select","id","className","label","hint","name","defaultValue","optional","disabled","onChange","options","status","unselectedText","props","selectedItem","setSelectedItem","useState","_onChange","changedValue","event","cx","option","expansion","SelectWithOther","labelForSelect","otherInputLabel","otherInputOnChange","otherOptionDisplay","children","OTHER_VALUE","showOther","setShowOther","optionsWithOther","text","value","e","selectElement","useFormFieldSet","formFieldSetProps","fieldSetProps","STORYBOOK_REACT_CLASSES","docgenInfo","path"],"mappings":"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","sourcesContent":["import React, { useState, HTMLAttributes } from 'react';\nimport { FormStatus, FormStatusProps } from '../FormStatus/FormStatus';\nimport { FieldSet, FieldSetProps } from '../FieldSet/FieldSet';\nimport cx from 'classnames';\nimport { FormFieldSetProps, FormFieldSet } from '../Form_New';\n\ntype SelectOption = {\n\ttext: string;\n\tvalue: string;\n\texpansion?: React.ReactNode;\n};\n\nexport type SelectProps = {\n\tid: string;\n\tlabel: string;\n\thint?: string;\n\tname?: string;\n\tdefaultValue?: string;\n\toptions: SelectOption[];\n\toptional?: boolean;\n\tunselectedText?: string;\n\tdisabled?: boolean;\n\tonChange: React.ChangeEventHandler<HTMLSelectElement>;\n\tstatus?: FormStatusProps;\n} & Omit<HTMLAttributes<HTMLSelectElement>, 'defaultValue' | 'onChange'>;\n\n/**\n * Component that wraps a native select element.\n * It also provides for expansion support by showing the expansion below the entire\n * select element.\n */\nexport const Select: React.FC<SelectProps> = ({\n\tid,\n\tclassName,\n\tlabel,\n\thint,\n\tname,\n\tdefaultValue = '',\n\toptional,\n\tdisabled,\n\tonChange,\n\toptions,\n\tstatus,\n\tunselectedText = '- Select -',\n\t...props\n}) => {\n\tconst [selectedItem, setSelectedItem] = useState(defaultValue);\n\n\t// Wrap the supplied onChange to provide for local state management\n\tconst _onChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst changedValue = event.target.value;\n\t\tsetSelectedItem(changedValue);\n\t\tonChange(event);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cx(\n\t\t\t\t'usa-form-group',\n\t\t\t\t{\n\t\t\t\t\t[`usa-form-group--${status && status.type}`]: status,\n\t\t\t\t},\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\tkey={`${id}-form-group`}\n\t\t>\n\t\t\t{hint && <span className=\"usa-hint text-italic\">{hint}</span>}\n\t\t\t<div className={cx({ 'margin-top-3': !label })}></div>\n\t\t\t{label && (\n\t\t\t\t<label\n\t\t\t\t\tclassName={cx('usa-label', { [`usa-label--${status && status.type}`]: status })}\n\t\t\t\t\thtmlFor={id}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</label>\n\t\t\t)}\n\t\t\t{status && status.message && <FormStatus {...status} />}\n\t\t\t<select\n\t\t\t\tid={id}\n\t\t\t\tkey={`${id}-select`}\n\t\t\t\tclassName={`usa-select${status ? ` usa-input--${status.type}` : ''}`}\n\t\t\t\tname={name || ''}\n\t\t\t\tonChange={_onChange}\n\t\t\t\tvalue={selectedItem}\n\t\t\t\tdisabled={disabled}\n\t\t\t\t// Using aria-required to avoid default Chrome behavior\n\t\t\t\taria-required={!optional}\n\t\t\t\taria-describedby={status ? status.id : undefined}\n\t\t\t\taria-invalid={status && status.type === 'error'}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<option key={`${id}-unselected`} value=\"\">\n\t\t\t\t\t{unselectedText || '- Select -'}\n\t\t\t\t</option>\n\t\t\t\t{options.map((option) => (\n\t\t\t\t\t<option value={option.value} key={`${id}-${option.value}-option`}>\n\t\t\t\t\t\t{option.text}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t{options.map((option) => {\n\t\t\t\tconst expansion = option.expansion;\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment key={`${id}-${option.value}-expansion`}>\n\t\t\t\t\t\t{expansion && selectedItem === option.value && (\n\t\t\t\t\t\t\t<div className=\"oec-itemchooser-expansion\">{option.expansion}</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\n/**\n * Props for an other option text input wrapped component of type TWrapped,\n * including props for TWrapped\n */\ntype OtherOptionTextInputWrapperProps<TWrapped> = {\n\tlegend: string;\n\tshowLegend?: boolean;\n\thint?: string;\n\toptional?: boolean;\n\totherInputLabel: string;\n\totherInputOnChange: React.ChangeEventHandler;\n\totherOptionDisplay: string;\n\thorizontal?: boolean;\n\tlabelForSelect: string;\n} & Omit<TWrapped, 'label' | 'legend'>;\n\n/**\n * Wraps a Select element in a FieldSet and provides a text input when the user\n * selects \"Other\"\n */\nexport const SelectWithOther: React.FC<OtherOptionTextInputWrapperProps<SelectProps>> = ({\n\tid,\n\tlabelForSelect,\n\tname,\n\tdefaultValue = '',\n\totherInputLabel,\n\totherInputOnChange,\n\totherOptionDisplay,\n\tonChange,\n\tstatus,\n\toptions,\n\tchildren,\n\t...props\n}) => {\n\tconst OTHER_VALUE = '__other';\n\n\tconst [showOther, setShowOther] = useState(defaultValue === OTHER_VALUE);\n\n\tconst optionsWithOther = [\n\t\t...options,\n\t\t{\n\t\t\ttext: otherOptionDisplay,\n\t\t\tvalue: OTHER_VALUE,\n\t\t},\n\t];\n\n\tconst _onChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst changedValue = (e.target as any).value;\n\t\tif (changedValue === OTHER_VALUE) {\n\t\t\tsetShowOther(true);\n\t\t} else {\n\t\t\tsetShowOther(false);\n\t\t}\n\t\tonChange(e);\n\t};\n\n\tconst selectElement = (\n\t\t<Select\n\t\t\tid={id}\n\t\t\tlabel={labelForSelect}\n\t\t\tdefaultValue={defaultValue}\n\t\t\tstatus={status}\n\t\t\tonChange={_onChange}\n\t\t\toptions={optionsWithOther}\n\t\t\t{...props}\n\t\t/>\n\t);\n\n\tif (showOther) {\n\t\tconst useFormFieldSet = (props as unknown) as FormFieldSetProps<any>;\n\t\tif (useFormFieldSet) {\n\t\t\tconst formFieldSetProps = (props as unknown) as FormFieldSetProps<any>;\n\t\t\treturn <FormFieldSet {...formFieldSetProps}>{selectElement}</FormFieldSet>;\n\t\t}\n\n\t\tconst fieldSetProps = (props as unknown) as FieldSetProps;\n\t\treturn <FieldSet {...fieldSetProps}>{selectElement}</FieldSet>;\n\t}\n\n\treturn selectElement;\n};\ntry {\n    // @ts-ignore\n    Select.displayName = \"Select\";\n    // @ts-ignore\n    Select.__docgenInfo = { \"description\": \"Component that wraps a native select element.\\nIt also provides for expansion support by showing the expansion below the entire\\nselect element.\", \"displayName\": \"Select\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Select/Select.tsx#Select\"] = { docgenInfo: Select.__docgenInfo, name: \"Select\", path: \"src/components/Select/Select.tsx#Select\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    SelectWithOther.displayName = \"SelectWithOther\";\n    // @ts-ignore\n    SelectWithOther.__docgenInfo = { \"description\": \"Wraps a Select element in a FieldSet and provides a text input when the user\\nselects \\\"Other\\\"\", \"displayName\": \"SelectWithOther\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Select/Select.tsx#SelectWithOther\"] = { docgenInfo: SelectWithOther.__docgenInfo, name: \"SelectWithOther\", path: \"src/components/Select/Select.tsx#SelectWithOther\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}