{"ast":null,"code":"import _toConsumableArray from \"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/app/src/components/Select/Select.tsx\";\n\nimport React, { useState } from 'react';\nimport { FormStatus } from '../FormStatus/FormStatus';\nimport { FieldSet } from '../FieldSet/FieldSet';\nimport cx from 'classnames';\nimport { FormFieldSet } from '../Form_New';\n/**\n * Component that wraps a native select element.\n * It also provides for expansion support by showing the expansion below the entire\n * select element.\n */\n\nexport var Select = function Select(_ref) {\n  var id = _ref.id,\n      className = _ref.className,\n      label = _ref.label,\n      hint = _ref.hint,\n      name = _ref.name,\n      _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? '' : _ref$defaultValue,\n      optional = _ref.optional,\n      disabled = _ref.disabled,\n      onChange = _ref.onChange,\n      options = _ref.options,\n      status = _ref.status,\n      _ref$unselectedText = _ref.unselectedText,\n      unselectedText = _ref$unselectedText === void 0 ? '- Select -' : _ref$unselectedText,\n      props = _objectWithoutProperties(_ref, [\"id\", \"className\", \"label\", \"hint\", \"name\", \"defaultValue\", \"optional\", \"disabled\", \"onChange\", \"options\", \"status\", \"unselectedText\"]);\n\n  var _useState = useState(defaultValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedItem = _useState2[0],\n      setSelectedItem = _useState2[1]; // Wrap the supplied onChange to provide for local state management\n\n\n  var _onChange = function _onChange(event) {\n    var changedValue = event.target.value;\n    setSelectedItem(changedValue);\n    onChange(event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('usa-form-group', _defineProperty({}, \"usa-form-group--\".concat(status && status.type), status), className),\n    key: \"\".concat(id, \"-form-group\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, hint && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"usa-hint text-italic\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, hint), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx({\n      'margin-top-3': !label\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }), label && /*#__PURE__*/React.createElement(\"label\", {\n    className: cx('usa-label', _defineProperty({}, \"usa-label--\".concat(status && status.type), status)),\n    htmlFor: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, label), status && status.message && /*#__PURE__*/React.createElement(FormStatus, Object.assign({}, status, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"select\", Object.assign({\n    id: id,\n    key: \"\".concat(id, \"-select\"),\n    className: \"usa-select\".concat(status ? \" usa-input--\".concat(status.type) : ''),\n    name: name || '',\n    onChange: _onChange,\n    value: selectedItem,\n    disabled: disabled // Using aria-required to avoid default Chrome behavior\n    ,\n    \"aria-required\": !optional,\n    \"aria-describedby\": status ? status.id : undefined,\n    \"aria-invalid\": status && status.type === 'error'\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    key: \"\".concat(id, \"-unselected\"),\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, unselectedText || '- Select -'), options.map(function (option) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: option.value,\n      key: \"\".concat(id, \"-\").concat(option.value, \"-option\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }\n    }, option.text);\n  })), options.map(function (option) {\n    var expansion = option.expansion;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: \"\".concat(id, \"-\").concat(option.value, \"-expansion\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }\n    }, expansion && selectedItem === option.value && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"oec-itemchooser-expansion\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 8\n      }\n    }, option.expansion));\n  }));\n};\n/**\n * Props for an other option text input wrapped component of type TWrapped,\n * including props for TWrapped\n */\n\n/**\n * Wraps a Select element in a FieldSet and provides a text input when the user\n * selects \"Other\"\n */\n\nexport var SelectWithOther = function SelectWithOther(_ref2) {\n  var id = _ref2.id,\n      labelForSelect = _ref2.labelForSelect,\n      name = _ref2.name,\n      _ref2$defaultValue = _ref2.defaultValue,\n      defaultValue = _ref2$defaultValue === void 0 ? '' : _ref2$defaultValue,\n      otherInputLabel = _ref2.otherInputLabel,\n      otherInputOnChange = _ref2.otherInputOnChange,\n      otherOptionDisplay = _ref2.otherOptionDisplay,\n      onChange = _ref2.onChange,\n      status = _ref2.status,\n      options = _ref2.options,\n      children = _ref2.children,\n      props = _objectWithoutProperties(_ref2, [\"id\", \"labelForSelect\", \"name\", \"defaultValue\", \"otherInputLabel\", \"otherInputOnChange\", \"otherOptionDisplay\", \"onChange\", \"status\", \"options\", \"children\"]);\n\n  var OTHER_VALUE = '__other';\n\n  var _useState3 = useState(defaultValue === OTHER_VALUE),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showOther = _useState4[0],\n      setShowOther = _useState4[1];\n\n  var optionsWithOther = [].concat(_toConsumableArray(options), [{\n    text: otherOptionDisplay,\n    value: OTHER_VALUE\n  }]);\n\n  var _onChange = function _onChange(e) {\n    var changedValue = e.target.value;\n\n    if (changedValue === OTHER_VALUE) {\n      setShowOther(true);\n    } else {\n      setShowOther(false);\n    }\n\n    onChange(e);\n  };\n\n  var selectElement = /*#__PURE__*/React.createElement(Select, Object.assign({\n    id: id,\n    label: labelForSelect,\n    defaultValue: defaultValue,\n    status: status,\n    onChange: _onChange,\n    options: optionsWithOther\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 3\n    }\n  }));\n\n  if (showOther) {\n    var useFormFieldSet = props;\n\n    if (useFormFieldSet) {\n      var formFieldSetProps = props;\n      return /*#__PURE__*/React.createElement(FormFieldSet, Object.assign({}, formFieldSetProps, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }), selectElement);\n    }\n\n    var fieldSetProps = props;\n    return /*#__PURE__*/React.createElement(FieldSet, Object.assign({}, fieldSetProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 10\n      }\n    }), selectElement);\n  }\n\n  return selectElement;\n};\n\ntry {\n  // @ts-ignore\n  Select.displayName = \"Select\"; // @ts-ignore\n\n  Select.__docgenInfo = {\n    \"description\": \"Component that wraps a native select element.\\nIt also provides for expansion support by showing the expansion below the entire\\nselect element.\",\n    \"displayName\": \"Select\",\n    \"props\": {}\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Select/Select.tsx#Select\"] = {\n      docgenInfo: Select.__docgenInfo,\n      name: \"Select\",\n      path: \"src/components/Select/Select.tsx#Select\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\ntry {\n  // @ts-ignore\n  SelectWithOther.displayName = \"SelectWithOther\"; // @ts-ignore\n\n  SelectWithOther.__docgenInfo = {\n    \"description\": \"Wraps a Select element in a FieldSet and provides a text input when the user\\nselects \\\"Other\\\"\",\n    \"displayName\": \"SelectWithOther\",\n    \"props\": {}\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Select/Select.tsx#SelectWithOther\"] = {\n      docgenInfo: SelectWithOther.__docgenInfo,\n      name: \"SelectWithOther\",\n      path: \"src/components/Select/Select.tsx#SelectWithOther\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}","map":{"version":3,"sources":["/home/app/src/components/Select/Select.tsx"],"names":["Select","id","className","label","hint","name","defaultValue","optional","disabled","onChange","options","status","unselectedText","props","selectedItem","setSelectedItem","useState","_onChange","changedValue","event","cx","option","expansion","SelectWithOther","labelForSelect","otherInputLabel","otherInputOnChange","otherOptionDisplay","children","OTHER_VALUE","showOther","setShowOther","optionsWithOther","text","value","e","selectElement","useFormFieldSet","formFieldSetProps","fieldSetProps","STORYBOOK_REACT_CLASSES","docgenInfo","path"],"mappings":";;;;;;;;AAAA,OAAA,KAAA,IAAA,QAAA,QAAA,OAAA;AACA,SAAA,UAAA,QAAA,0BAAA;AACA,SAAA,QAAA,QAAA,sBAAA;AACA,OAAA,EAAA,MAAA,YAAA;AACA,SAAA,YAAA,QAAA,aAAA;AAsBA;;;;;;AAKA,OAAO,IAAMA,MAA6B,GAAG,SAAhCA,MAAgC,CAAA,IAAA,EAcvC;AAAA,MAbLC,EAaK,GAAA,IAAA,CAbLA,EAaK;AAAA,MAZLC,SAYK,GAAA,IAAA,CAZLA,SAYK;AAAA,MAXLC,KAWK,GAAA,IAAA,CAXLA,KAWK;AAAA,MAVLC,IAUK,GAAA,IAAA,CAVLA,IAUK;AAAA,MATLC,IASK,GAAA,IAAA,CATLA,IASK;AAAA,MAAA,iBAAA,GAAA,IAAA,CARLC,YAQK;AAAA,MARLA,YAQK,GAAA,iBAAA,KAAA,KAAA,CAAA,GARU,EAQV,GAAA,iBAAA;AAAA,MAPLC,QAOK,GAAA,IAAA,CAPLA,QAOK;AAAA,MANLC,QAMK,GAAA,IAAA,CANLA,QAMK;AAAA,MALLC,QAKK,GAAA,IAAA,CALLA,QAKK;AAAA,MAJLC,OAIK,GAAA,IAAA,CAJLA,OAIK;AAAA,MAHLC,MAGK,GAAA,IAAA,CAHLA,MAGK;AAAA,MAAA,mBAAA,GAAA,IAAA,CAFLC,cAEK;AAAA,MAFLA,cAEK,GAAA,mBAAA,KAAA,KAAA,CAAA,GAFY,YAEZ,GAAA,mBAAA;AAAA,MADFC,KACE,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,IAAA,EAAA,WAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,cAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,SAAA,EAAA,QAAA,EAAA,gBAAA,CAAA,CAAA;;AAAA,MAAA,SAAA,GACmCG,QAAQ,CAD3C,YAC2C,CAD3C;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MACEF,YADF,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MACgBC,eADhB,GAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAGL;;;AACA,MAAME,SAAS,GAAG,SAAZA,SAAY,CAAA,KAAA,EAAiD;AAClE,QAAMC,YAAY,GAAGC,KAAK,CAALA,MAAAA,CAArB,KAAA;AACAJ,IAAAA,eAAe,CAAfA,YAAe,CAAfA;AACAN,IAAAA,QAAQ,CAARA,KAAQ,CAARA;AAHD,GAAA;;AAMA,SAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACC,IAAA,SAAS,EAAEW,EAAE,CAAA,gBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,mBAAA,MAAA,CAGST,MAAM,IAAIA,MAAM,CAHzB,IAAA,CAAA,EAAA,MAAA,CAAA,EADd,SACc,CADd;AAQC,IAAA,GAAG,EAAA,GAAA,MAAA,CAAA,EAAA,EARJ,aAQI,CARJ;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAUEP,IAAI,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAf,sBAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAVV,IAUU,CAVV,EAAA,aAWC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEgB,EAAE,CAAC;AAAE,sBAAgB,CAACjB;AAAnB,KAAD,CAAlB;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAXD,EAYEA,KAAK,IAAA,aACL,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACC,IAAA,SAAS,EAAEiB,EAAE,CAAA,WAAA,EAAA,eAAA,CAAA,EAAA,EAAA,cAAA,MAAA,CAA+BT,MAAM,IAAIA,MAAM,CAA/C,IAAA,CAAA,EADd,MACc,CAAA,CADd;AAEC,IAAA,OAAO,EAFR,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAbF,KAaE,CAbF,EAoBEA,MAAM,IAAIA,MAAM,CAAhBA,OAAAA,IAAAA,aAA4B,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,CApB9B,EAAA,aAqBC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACC,IAAA,EAAE,EADH,EAAA;AAEC,IAAA,GAAG,EAAA,GAAA,MAAA,CAAA,EAAA,EAFJ,SAEI,CAFJ;AAGC,IAAA,SAAS,EAAA,aAAA,MAAA,CAAeA,MAAM,GAAA,eAAA,MAAA,CAAkBA,MAAM,CAAxB,IAAA,CAAA,GAH/B,EAGU,CAHV;AAIC,IAAA,IAAI,EAAEN,IAAI,IAJX,EAAA;AAKC,IAAA,QAAQ,EALT,SAAA;AAMC,IAAA,KAAK,EANN,YAAA;AAOC,IAAA,QAAQ,EAPT,QAAA,CAQC;AARD;AASC,qBAAe,CAThB,QAAA;AAUC,wBAAkBM,MAAM,GAAGA,MAAM,CAAT,EAAA,GAVzB,SAAA;AAWC,oBAAcA,MAAM,IAAIA,MAAM,CAANA,IAAAA,KAAgB;AAXzC,GAAA,EAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EAAA,aAcC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,GAAG,EAAA,GAAA,MAAA,CAAA,EAAA,EAAX,aAAW,CAAX;AAAiC,IAAA,KAAK,EAAtC,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACEC,cAAc,IAfjB,YAcC,CAdD,EAiBE,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAA;AAAA,WAAA,aACZ,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,MAAA,KAAK,EAAES,MAAM,CAArB,KAAA;AAA6B,MAAA,GAAG,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,MAAA,CAAWA,MAAM,CAAjB,KAAA,EAAhC,SAAgC,CAAhC;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EACEA,MAAM,CAFI,IACZ,CADY;AAtCf,GAsCG,CAjBF,CArBD,EA4CE,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAY;AACxB,QAAMC,SAAS,GAAGD,MAAM,CAAxB,SAAA;AACA,WAAA,aACC,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAA;AAAgB,MAAA,GAAG,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,MAAA,CAAWA,MAAM,CAAjB,KAAA,EAAnB,YAAmB,CAAnB;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,GAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EACEC,SAAS,IAAIR,YAAY,KAAKO,MAAM,CAApCC,KAAAA,IAAAA,aACA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAd,2BAAA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,GAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EAA4CD,MAAM,CAHrD,SAGG,CAFF,CADD;AA/CH,GA6CG,CA5CF,CADD;AAxBM,CAAA;AAmFP;;;;;AAgBA;;;;;AAIA,OAAO,IAAME,eAAwE,GAAG,SAA3EA,eAA2E,CAAA,KAAA,EAalF;AAAA,MAZLtB,EAYK,GAAA,KAAA,CAZLA,EAYK;AAAA,MAXLuB,cAWK,GAAA,KAAA,CAXLA,cAWK;AAAA,MAVLnB,IAUK,GAAA,KAAA,CAVLA,IAUK;AAAA,MAAA,kBAAA,GAAA,KAAA,CATLC,YASK;AAAA,MATLA,YASK,GAAA,kBAAA,KAAA,KAAA,CAAA,GATU,EASV,GAAA,kBAAA;AAAA,MARLmB,eAQK,GAAA,KAAA,CARLA,eAQK;AAAA,MAPLC,kBAOK,GAAA,KAAA,CAPLA,kBAOK;AAAA,MANLC,kBAMK,GAAA,KAAA,CANLA,kBAMK;AAAA,MALLlB,QAKK,GAAA,KAAA,CALLA,QAKK;AAAA,MAJLE,MAIK,GAAA,KAAA,CAJLA,MAIK;AAAA,MAHLD,OAGK,GAAA,KAAA,CAHLA,OAGK;AAAA,MAFLkB,QAEK,GAAA,KAAA,CAFLA,QAEK;AAAA,MADFf,KACE,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,oBAAA,EAAA,oBAAA,EAAA,UAAA,EAAA,QAAA,EAAA,SAAA,EAAA,UAAA,CAAA,CAAA;;AACL,MAAMgB,WAAW,GAAjB,SAAA;;AADK,MAAA,UAAA,GAG6Bb,QAAQ,CAACV,YAAY,KAHlD,WAGqC,CAHrC;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAA,MAGEwB,SAHF,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAGaC,YAHb,GAAA,UAAA,CAAA,CAAA,CAAA;;AAKL,MAAMC,gBAAgB,GAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,OAAA,CAAA,EAAA,CAErB;AACCC,IAAAA,IAAI,EADL,kBAAA;AAECC,IAAAA,KAAK,EAAEL;AAFR,GAFqB,CAAA,CAAtB;;AAQA,MAAMZ,SAAS,GAAG,SAAZA,SAAY,CAAA,CAAA,EAA6C;AAC9D,QAAMC,YAAY,GAAIiB,CAAC,CAAF,MAACA,CAAtB,KAAA;;AACA,QAAIjB,YAAY,KAAhB,WAAA,EAAkC;AACjCa,MAAAA,YAAY,CAAZA,IAAY,CAAZA;AADD,KAAA,MAEO;AACNA,MAAAA,YAAY,CAAZA,KAAY,CAAZA;AACA;;AACDtB,IAAAA,QAAQ,CAARA,CAAQ,CAARA;AAPD,GAAA;;AAUA,MAAM2B,aAAa,GAAA,aAClB,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACC,IAAA,EAAE,EADH,EAAA;AAEC,IAAA,KAAK,EAFN,cAAA;AAGC,IAAA,YAAY,EAHb,YAAA;AAIC,IAAA,MAAM,EAJP,MAAA;AAKC,IAAA,QAAQ,EALT,SAAA;AAMC,IAAA,OAAO,EAAEJ;AANV,GAAA,EAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,CADD;;AAYA,MAAA,SAAA,EAAe;AACd,QAAMK,eAAe,GAArB,KAAA;;AACA,QAAA,eAAA,EAAqB;AACpB,UAAMC,iBAAiB,GAAvB,KAAA;AACA,aAAA,aAAO,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,iBAAA,EAAA;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,GAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,CAAA,EAAP,aAAO,CAAP;AACA;;AAED,QAAMC,aAAa,GAAnB,KAAA;AACA,WAAA,aAAO,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,GAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,CAAA,EAAP,aAAO,CAAP;AACA;;AAED,SAAA,aAAA;AA3DM,CAAA;;AA6DP,IAAI;AACA;AACAvC,EAAAA,MAAM,CAANA,WAAAA,GAFA,QAEAA,CAFA,CAGA;;AACAA,EAAAA,MAAM,CAANA,YAAAA,GAAsB;AAAE,mBAAF,kJAAA;AAAqK,mBAArK,QAAA;AAA8L,aAAS;AAAvM,GAAtBA,CAJA,CAKA;;AACA,MAAI,OAAA,uBAAA,KAAJ,WAAA,EACI;AACAwC,IAAAA,uBAAuB,CAAvBA,yCAAuB,CAAvBA,GAAqE;AAAEC,MAAAA,UAAU,EAAEzC,MAAM,CAApB,YAAA;AAAmCK,MAAAA,IAAI,EAAvC,QAAA;AAAmDqC,MAAAA,IAAI,EAAE;AAAzD,KAArEF;AARR,CAAA,CAUA,OAAA,sCAAA,EAA+C,CAAG;;AAAA,IAAI;AAClD;AACAjB,EAAAA,eAAe,CAAfA,WAAAA,GAFkD,iBAElDA,CAFkD,CAGlD;;AACAA,EAAAA,eAAe,CAAfA,YAAAA,GAA+B;AAAE,mBAAF,iGAAA;AAAoH,mBAApH,iBAAA;AAAsJ,aAAS;AAA/J,GAA/BA,CAJkD,CAKlD;;AACA,MAAI,OAAA,uBAAA,KAAJ,WAAA,EACI;AACAiB,IAAAA,uBAAuB,CAAvBA,kDAAuB,CAAvBA,GAA8E;AAAEC,MAAAA,UAAU,EAAElB,eAAe,CAA7B,YAAA;AAA4ClB,MAAAA,IAAI,EAAhD,iBAAA;AAAqEqC,MAAAA,IAAI,EAAE;AAA3E,KAA9EF;AAR0C,CAAA,CAUlD,OAAA,sCAAA,EAA+C,CAAG","sourcesContent":["import React, { useState, HTMLAttributes } from 'react';\nimport { FormStatus, FormStatusProps } from '../FormStatus/FormStatus';\nimport { FieldSet, FieldSetProps } from '../FieldSet/FieldSet';\nimport cx from 'classnames';\nimport { FormFieldSetProps, FormFieldSet } from '../Form_New';\n\ntype SelectOption = {\n\ttext: string;\n\tvalue: string;\n\texpansion?: React.ReactNode;\n};\n\nexport type SelectProps = {\n\tid: string;\n\tlabel: string;\n\thint?: string;\n\tname?: string;\n\tdefaultValue?: string;\n\toptions: SelectOption[];\n\toptional?: boolean;\n\tunselectedText?: string;\n\tdisabled?: boolean;\n\tonChange: React.ChangeEventHandler<HTMLSelectElement>;\n\tstatus?: FormStatusProps;\n} & Omit<HTMLAttributes<HTMLSelectElement>, 'defaultValue' | 'onChange'>;\n\n/**\n * Component that wraps a native select element.\n * It also provides for expansion support by showing the expansion below the entire\n * select element.\n */\nexport const Select: React.FC<SelectProps> = ({\n\tid,\n\tclassName,\n\tlabel,\n\thint,\n\tname,\n\tdefaultValue = '',\n\toptional,\n\tdisabled,\n\tonChange,\n\toptions,\n\tstatus,\n\tunselectedText = '- Select -',\n\t...props\n}) => {\n\tconst [selectedItem, setSelectedItem] = useState(defaultValue);\n\n\t// Wrap the supplied onChange to provide for local state management\n\tconst _onChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst changedValue = event.target.value;\n\t\tsetSelectedItem(changedValue);\n\t\tonChange(event);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cx(\n\t\t\t\t'usa-form-group',\n\t\t\t\t{\n\t\t\t\t\t[`usa-form-group--${status && status.type}`]: status,\n\t\t\t\t},\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\tkey={`${id}-form-group`}\n\t\t>\n\t\t\t{hint && <span className=\"usa-hint text-italic\">{hint}</span>}\n\t\t\t<div className={cx({ 'margin-top-3': !label })}></div>\n\t\t\t{label && (\n\t\t\t\t<label\n\t\t\t\t\tclassName={cx('usa-label', { [`usa-label--${status && status.type}`]: status })}\n\t\t\t\t\thtmlFor={id}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</label>\n\t\t\t)}\n\t\t\t{status && status.message && <FormStatus {...status} />}\n\t\t\t<select\n\t\t\t\tid={id}\n\t\t\t\tkey={`${id}-select`}\n\t\t\t\tclassName={`usa-select${status ? ` usa-input--${status.type}` : ''}`}\n\t\t\t\tname={name || ''}\n\t\t\t\tonChange={_onChange}\n\t\t\t\tvalue={selectedItem}\n\t\t\t\tdisabled={disabled}\n\t\t\t\t// Using aria-required to avoid default Chrome behavior\n\t\t\t\taria-required={!optional}\n\t\t\t\taria-describedby={status ? status.id : undefined}\n\t\t\t\taria-invalid={status && status.type === 'error'}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<option key={`${id}-unselected`} value=\"\">\n\t\t\t\t\t{unselectedText || '- Select -'}\n\t\t\t\t</option>\n\t\t\t\t{options.map((option) => (\n\t\t\t\t\t<option value={option.value} key={`${id}-${option.value}-option`}>\n\t\t\t\t\t\t{option.text}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\t\t\t{options.map((option) => {\n\t\t\t\tconst expansion = option.expansion;\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment key={`${id}-${option.value}-expansion`}>\n\t\t\t\t\t\t{expansion && selectedItem === option.value && (\n\t\t\t\t\t\t\t<div className=\"oec-itemchooser-expansion\">{option.expansion}</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\n/**\n * Props for an other option text input wrapped component of type TWrapped,\n * including props for TWrapped\n */\ntype OtherOptionTextInputWrapperProps<TWrapped> = {\n\tlegend: string;\n\tshowLegend?: boolean;\n\thint?: string;\n\toptional?: boolean;\n\totherInputLabel: string;\n\totherInputOnChange: React.ChangeEventHandler;\n\totherOptionDisplay: string;\n\thorizontal?: boolean;\n\tlabelForSelect: string;\n} & Omit<TWrapped, 'label' | 'legend'>;\n\n/**\n * Wraps a Select element in a FieldSet and provides a text input when the user\n * selects \"Other\"\n */\nexport const SelectWithOther: React.FC<OtherOptionTextInputWrapperProps<SelectProps>> = ({\n\tid,\n\tlabelForSelect,\n\tname,\n\tdefaultValue = '',\n\totherInputLabel,\n\totherInputOnChange,\n\totherOptionDisplay,\n\tonChange,\n\tstatus,\n\toptions,\n\tchildren,\n\t...props\n}) => {\n\tconst OTHER_VALUE = '__other';\n\n\tconst [showOther, setShowOther] = useState(defaultValue === OTHER_VALUE);\n\n\tconst optionsWithOther = [\n\t\t...options,\n\t\t{\n\t\t\ttext: otherOptionDisplay,\n\t\t\tvalue: OTHER_VALUE,\n\t\t},\n\t];\n\n\tconst _onChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n\t\tconst changedValue = (e.target as any).value;\n\t\tif (changedValue === OTHER_VALUE) {\n\t\t\tsetShowOther(true);\n\t\t} else {\n\t\t\tsetShowOther(false);\n\t\t}\n\t\tonChange(e);\n\t};\n\n\tconst selectElement = (\n\t\t<Select\n\t\t\tid={id}\n\t\t\tlabel={labelForSelect}\n\t\t\tdefaultValue={defaultValue}\n\t\t\tstatus={status}\n\t\t\tonChange={_onChange}\n\t\t\toptions={optionsWithOther}\n\t\t\t{...props}\n\t\t/>\n\t);\n\n\tif (showOther) {\n\t\tconst useFormFieldSet = (props as unknown) as FormFieldSetProps<any>;\n\t\tif (useFormFieldSet) {\n\t\t\tconst formFieldSetProps = (props as unknown) as FormFieldSetProps<any>;\n\t\t\treturn <FormFieldSet {...formFieldSetProps}>{selectElement}</FormFieldSet>;\n\t\t}\n\n\t\tconst fieldSetProps = (props as unknown) as FieldSetProps;\n\t\treturn <FieldSet {...fieldSetProps}>{selectElement}</FieldSet>;\n\t}\n\n\treturn selectElement;\n};\ntry {\n    // @ts-ignore\n    Select.displayName = \"Select\";\n    // @ts-ignore\n    Select.__docgenInfo = { \"description\": \"Component that wraps a native select element.\\nIt also provides for expansion support by showing the expansion below the entire\\nselect element.\", \"displayName\": \"Select\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Select/Select.tsx#Select\"] = { docgenInfo: Select.__docgenInfo, name: \"Select\", path: \"src/components/Select/Select.tsx#Select\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    SelectWithOther.displayName = \"SelectWithOther\";\n    // @ts-ignore\n    SelectWithOther.__docgenInfo = { \"description\": \"Wraps a Select element in a FieldSet and provides a text input when the user\\nselects \\\"Other\\\"\", \"displayName\": \"SelectWithOther\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Select/Select.tsx#SelectWithOther\"] = { docgenInfo: SelectWithOther.__docgenInfo, name: \"SelectWithOther\", path: \"src/components/Select/Select.tsx#SelectWithOther\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}