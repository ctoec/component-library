{"ast":null,"code":"var _jsxFileName = \"/home/app/src/components/Button/Button.tsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport function Button(_ref) {\n  var text = _ref.text,\n      onClick = _ref.onClick,\n      href = _ref.href,\n      external = _ref.external,\n      appearance = _ref.appearance,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      title = _ref.title;\n  var classString = 'usa-button' + (appearance && appearance !== 'default' ? ' usa-button--' + appearance : '') + (className ? ' ' + className : '');\n\n  if (onClick === 'submit') {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      className: classString,\n      disabled: disabled,\n      type: \"submit\",\n      value: text // Value will never actually be an element for a submit button but TS doesn't know that\n      ,\n      title: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }\n    });\n  }\n\n  onClick = typeof onClick === 'function' ? onClick : function () {};\n\n  if (href && !external) {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: href,\n      className: classString,\n      onClick: onClick,\n      title: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 4\n      }\n    }, text);\n  }\n\n  if (href && external) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: href,\n      className: classString,\n      onClick: onClick,\n      title: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }\n    }, text);\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: classString,\n    disabled: disabled,\n    onClick: onClick,\n    type: \"button\",\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }, text);\n}\n\ntry {\n  // @ts-ignore\n  Button.displayName = \"Button\"; // @ts-ignore\n\n  Button.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Button\",\n    \"props\": {}\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.tsx#Button\"] = {\n      docgenInfo: Button.__docgenInfo,\n      name: \"Button\",\n      path: \"src/components/Button/Button.tsx#Button\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}","map":{"version":3,"sources":["/home/app/src/components/Button/Button.tsx"],"names":["text","onClick","href","external","appearance","disabled","className","title","classString","Button","STORYBOOK_REACT_CLASSES","docgenInfo","name","path"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\ntype ButtonAppearance = 'default' | 'base' | 'secondary' | 'unstyled' | 'outline';\n\ntype BaseButtonProps = {\n\thref?: string;\n\texternal?: boolean;\n\tappearance?: ButtonAppearance;\n\tdisabled?: boolean;\n\tclassName?: string;\n};\n\nexport type ButtonProps = BaseButtonProps &\n\tReact.HTMLProps<HTMLButtonElement | HTMLAnchorElement> & {\n\t\ttext: string | JSX.Element;\n\t\tonClick?: () => any;\n\t};\n\ntype SubmitButtonProps = BaseButtonProps & {\n\ttext: string;\n\tonClick?: 'submit';\n\ttitle?: string;\n};\n\nexport function Button({\n\ttext,\n\tonClick,\n\thref,\n\texternal,\n\tappearance,\n\tdisabled,\n\tclassName,\n\ttitle,\n}: ButtonProps | SubmitButtonProps) {\n\tconst classString =\n\t\t'usa-button' +\n\t\t(appearance && appearance !== 'default' ? ' usa-button--' + appearance : '') +\n\t\t(className ? ' ' + className : '');\n\n\tif (onClick === 'submit') {\n\t\treturn (\n\t\t\t<input\n\t\t\t\tclassName={classString}\n\t\t\t\tdisabled={disabled}\n\t\t\t\ttype=\"submit\"\n\t\t\t\tvalue={text as string}\n\t\t\t\t// Value will never actually be an element for a submit button but TS doesn't know that\n\t\t\t\ttitle={title}\n\t\t\t/>\n\t\t);\n\t}\n\tonClick = typeof onClick === 'function' ? onClick : () => {};\n\n\tif (href && !external) {\n\t\treturn (\n\t\t\t<Link to={href} className={classString} onClick={onClick} title={title}>\n\t\t\t\t{text}\n\t\t\t</Link>\n\t\t);\n\t}\n\n\tif (href && external) {\n\t\treturn (\n\t\t\t<a href={href} className={classString} onClick={onClick} title={title}>\n\t\t\t\t{text}\n\t\t\t</a>\n\t\t);\n\t}\n\n\treturn (\n\t\t<button\n\t\t\tclassName={classString}\n\t\t\tdisabled={disabled}\n\t\t\tonClick={onClick}\n\t\t\ttype=\"button\"\n\t\t\ttitle={title}\n\t\t>\n\t\t\t{text}\n\t\t</button>\n\t);\n}\ntry {\n    // @ts-ignore\n    Button.displayName = \"Button\";\n    // @ts-ignore\n    Button.__docgenInfo = { \"description\": \"\", \"displayName\": \"Button\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.tsx#Button\"] = { docgenInfo: Button.__docgenInfo, name: \"Button\", path: \"src/components/Button/Button.tsx#Button\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}