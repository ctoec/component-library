{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';export function Button(_ref){var text=_ref.text,onClick=_ref.onClick,href=_ref.href,external=_ref.external,appearance=_ref.appearance,disabled=_ref.disabled,className=_ref.className,title=_ref.title;var classString='usa-button'+(appearance&&appearance!=='default'?' usa-button--'+appearance:'')+(className?' '+className:'');if(onClick==='submit'){return/*#__PURE__*/React.createElement(\"input\",{className:classString,disabled:disabled,type:\"submit\",value:text// Value will never actually be an element for a submit button but TS doesn't know that\n,title:title});}onClick=typeof onClick==='function'?onClick:function(){};if(href&&!external){return/*#__PURE__*/React.createElement(Link,{to:href,className:classString,onClick:onClick,title:title},text);}if(href&&external){return/*#__PURE__*/React.createElement(\"a\",{href:href,className:classString,onClick:onClick,title:title},text);}return/*#__PURE__*/React.createElement(\"button\",{className:classString,disabled:disabled,onClick:onClick,type:\"button\",title:title},text);}try{// @ts-ignore\nButton.displayName=\"Button\";// @ts-ignore\nButton.__docgenInfo={\"description\":\"\",\"displayName\":\"Button\",\"props\":{}};// @ts-ignore\nif(typeof STORYBOOK_REACT_CLASSES!==\"undefined\")// @ts-ignore\nSTORYBOOK_REACT_CLASSES[\"src/components/Button/Button.tsx#Button\"]={docgenInfo:Button.__docgenInfo,name:\"Button\",path:\"src/components/Button/Button.tsx#Button\"};}catch(__react_docgen_typescript_loader_error){}","map":{"version":3,"sources":["/home/melanie/Code/component-library/src/components/Button/Button.tsx"],"names":["text","onClick","href","external","appearance","disabled","className","title","classString","Button","STORYBOOK_REACT_CLASSES","docgenInfo","name","path"],"mappings":"AAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,IAAA,KAAA,kBAAA,CAwBA,MAAO,SAAA,CAAA,MAAA,CAAA,IAAA,CAS6B,CAAA,GARnCA,CAAAA,IAQmC,CAAA,IAAA,CARnCA,IAQmC,CAPnCC,OAOmC,CAAA,IAAA,CAPnCA,OAOmC,CANnCC,IAMmC,CAAA,IAAA,CANnCA,IAMmC,CALnCC,QAKmC,CAAA,IAAA,CALnCA,QAKmC,CAJnCC,UAImC,CAAA,IAAA,CAJnCA,UAImC,CAHnCC,QAGmC,CAAA,IAAA,CAHnCA,QAGmC,CAFnCC,SAEmC,CAAA,IAAA,CAFnCA,SAEmC,CADnCC,KACmC,CAAA,IAAA,CADnCA,KACmC,CACnC,GAAMC,CAAAA,WAAW,CAChB,cACCJ,UAAU,EAAIA,UAAU,GAAxBA,SAAAA,CAAyC,gBAAzCA,UAAAA,CADD,EAAA,GAECE,SAAS,CAAG,IAAH,SAAA,CAHX,EACC,CADD,CAKA,GAAIL,OAAO,GAAX,QAAA,CAA0B,CACzB,MAAA,aACC,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,CACC,SAAS,CADV,WAAA,CAEC,QAAQ,CAFT,QAAA,CAGC,IAAI,CAHL,QAAA,CAIC,KAAK,CAJN,IAKC;AALD,CAMC,KAAK,CAAEM,KANR,CAAA,CADD,CAUA,CACDN,OAAO,CAAG,MAAA,CAAA,OAAA,GAAA,UAAA,CAAA,OAAA,CAA0C,UAAM,CAA1DA,CAAAA,CAEA,GAAIC,IAAI,EAAI,CAAZ,QAAA,CAAuB,CACtB,MAAA,aACC,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,EAAE,CAAR,IAAA,CAAgB,SAAS,CAAzB,WAAA,CAAwC,OAAO,CAA/C,OAAA,CAA0D,KAAK,CAAEK,KAAjE,CAAA,CADD,IACC,CADD,CAKA,CAED,GAAIL,IAAI,EAAR,QAAA,CAAsB,CACrB,MAAA,aACC,KAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAG,IAAI,CAAP,IAAA,CAAe,SAAS,CAAxB,WAAA,CAAuC,OAAO,CAA9C,OAAA,CAAyD,KAAK,CAAEK,KAAhE,CAAA,CADD,IACC,CADD,CAKA,CAED,MAAA,aACC,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,CACC,SAAS,CADV,WAAA,CAEC,QAAQ,CAFT,QAAA,CAGC,OAAO,CAHR,OAAA,CAIC,IAAI,CAJL,QAAA,CAKC,KAAK,CAAEA,KALR,CAAA,CADD,IACC,CADD,CAWA,CACD,GAAI,CACA;AACAE,MAAM,CAANA,WAAAA,CAFA,QAEAA,CACA;AACAA,MAAM,CAANA,YAAAA,CAAsB,CAAE,cAAF,EAAA,CAAqB,cAArB,QAAA,CAA8C,QAAS,EAAvD,CAAtBA,CACA;AACA,GAAI,MAAA,CAAA,uBAAA,GAAJ,WAAA,CACI;AACAC,uBAAuB,CAAvBA,yCAAuB,CAAvBA,CAAqE,CAAEC,UAAU,CAAEF,MAAM,CAApB,YAAA,CAAmCG,IAAI,CAAvC,QAAA,CAAmDC,IAAI,CAAE,yCAAzD,CAArEH,CARR,CAUA,MAAA,sCAAA,CAA+C,CAAG","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\ntype ButtonAppearance = 'default' | 'base' | 'secondary' | 'unstyled' | 'outline';\n\ntype BaseButtonProps = {\n\thref?: string;\n\texternal?: boolean;\n\tappearance?: ButtonAppearance;\n\tdisabled?: boolean;\n\tclassName?: string;\n};\n\nexport type ButtonProps = BaseButtonProps &\n\tReact.HTMLProps<HTMLButtonElement | HTMLAnchorElement> & {\n\t\ttext: string | JSX.Element;\n\t\tonClick?: () => any;\n\t};\n\ntype SubmitButtonProps = BaseButtonProps & {\n\ttext: string;\n\tonClick?: 'submit';\n\ttitle?: string;\n};\n\nexport function Button({\n\ttext,\n\tonClick,\n\thref,\n\texternal,\n\tappearance,\n\tdisabled,\n\tclassName,\n\ttitle,\n}: ButtonProps | SubmitButtonProps) {\n\tconst classString =\n\t\t'usa-button' +\n\t\t(appearance && appearance !== 'default' ? ' usa-button--' + appearance : '') +\n\t\t(className ? ' ' + className : '');\n\n\tif (onClick === 'submit') {\n\t\treturn (\n\t\t\t<input\n\t\t\t\tclassName={classString}\n\t\t\t\tdisabled={disabled}\n\t\t\t\ttype=\"submit\"\n\t\t\t\tvalue={text as string}\n\t\t\t\t// Value will never actually be an element for a submit button but TS doesn't know that\n\t\t\t\ttitle={title}\n\t\t\t/>\n\t\t);\n\t}\n\tonClick = typeof onClick === 'function' ? onClick : () => {};\n\n\tif (href && !external) {\n\t\treturn (\n\t\t\t<Link to={href} className={classString} onClick={onClick} title={title}>\n\t\t\t\t{text}\n\t\t\t</Link>\n\t\t);\n\t}\n\n\tif (href && external) {\n\t\treturn (\n\t\t\t<a href={href} className={classString} onClick={onClick} title={title}>\n\t\t\t\t{text}\n\t\t\t</a>\n\t\t);\n\t}\n\n\treturn (\n\t\t<button\n\t\t\tclassName={classString}\n\t\t\tdisabled={disabled}\n\t\t\tonClick={onClick}\n\t\t\ttype=\"button\"\n\t\t\ttitle={title}\n\t\t>\n\t\t\t{text}\n\t\t</button>\n\t);\n}\ntry {\n    // @ts-ignore\n    Button.displayName = \"Button\";\n    // @ts-ignore\n    Button.__docgenInfo = { \"description\": \"\", \"displayName\": \"Button\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.tsx#Button\"] = { docgenInfo: Button.__docgenInfo, name: \"Button\", path: \"src/components/Button/Button.tsx#Button\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}