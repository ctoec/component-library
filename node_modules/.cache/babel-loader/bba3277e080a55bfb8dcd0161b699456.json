{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/melanie/Code/component-library/src/components/Card/ExpandCard.tsx\";\n\nimport React, { useContext, isValidElement, Children } from 'react';\nimport { CardContext } from '..';\n/**\n * Component for declaratively expanding/collapsing card\n * @param props\n */\n\nexport var ExpandCard = function ExpandCard(_ref) {\n  var children = _ref.children;\n\n  var _useContext = useContext(CardContext),\n      toggleExpanded = _useContext.toggleExpanded;\n\n  if (!isValidElement(children)) {\n    throw new Error('Invalid children to ExpandCard');\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Children.map(children, function (child) {\n    var Type = child.type,\n        props = child.props,\n        key = child.key;\n    return /*#__PURE__*/React.createElement(Type, Object.assign({}, key, props, {\n      onClick: function onClick(e) {\n        toggleExpanded();\n\n        if (props.onClick) {\n          props.onClick(e);\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }\n    }));\n  }));\n};\n\ntry {\n  // @ts-ignore\n  ExpandCard.displayName = \"ExpandCard\"; // @ts-ignore\n\n  ExpandCard.__docgenInfo = {\n    \"description\": \"Component for declaratively expanding/collapsing card\\n@param props\",\n    \"displayName\": \"ExpandCard\",\n    \"props\": {}\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Card/ExpandCard.tsx#ExpandCard\"] = {\n      docgenInfo: ExpandCard.__docgenInfo,\n      name: \"ExpandCard\",\n      path: \"src/components/Card/ExpandCard.tsx#ExpandCard\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}","map":{"version":3,"sources":["/home/melanie/Code/component-library/src/components/Card/ExpandCard.tsx"],"names":["ExpandCard","children","toggleExpanded","useContext","isValidElement","Type","props","key","child","STORYBOOK_REACT_CLASSES","docgenInfo","name","path"],"mappings":";;;AAAA,OAAA,KAAA,IAAA,UAAA,EAAA,cAAA,EAAA,QAAA,QAAA,OAAA;AACA,SAAA,WAAA,QAAA,IAAA;AAEA;;;;;AAIA,OAAO,IAAMA,UAAoB,GAAG,SAAvBA,UAAuB,CAAA,IAAA,EAAkB;AAAA,MAAfC,QAAe,GAAA,IAAA,CAAfA,QAAe;;AAAA,MAAA,WAAA,GAC1BE,UAAU,CADgB,WAChB,CADgB;AAAA,MAC7CD,cAD6C,GAAA,WAAA,CAAA,cAAA;;AAGrD,MAAI,CAACE,cAAc,CAAnB,QAAmB,CAAnB,EAA+B;AAC9B,UAAM,IAAA,KAAA,CAAN,gCAAM,CAAN;AACA;;AAED,SAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,QAAQ,CAAR,GAAA,CAAA,QAAA,EAAuB,UAAA,KAAA,EAAW;AAAA,QACpBC,IADoB,GACCG,KADD,CAAA,IAAA;AAAA,QACdF,KADc,GACCE,KADD,CAAA,KAAA;AAAA,QACPD,GADO,GACCC,KADD,CAAA,GAAA;AAElC,WAAA,aACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA;AAGC,MAAA,OAAO,EAAE,SAAA,OAAA,CAAA,CAAA,EAA0B;AAClCN,QAAAA,cAAc;;AACd,YAAII,KAAK,CAAT,OAAA,EAAmB;AAClBA,UAAAA,KAAK,CAALA,OAAAA,CAAAA,CAAAA;AACA;AAPH,OAAA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,CAAA,CADD;AAJH,GAEG,CADF,CADD;AAPM,CAAA;;AA2BP,IAAI;AACA;AACAN,EAAAA,UAAU,CAAVA,WAAAA,GAFA,YAEAA,CAFA,CAGA;;AACAA,EAAAA,UAAU,CAAVA,YAAAA,GAA0B;AAAE,mBAAF,qEAAA;AAAwF,mBAAxF,YAAA;AAAqH,aAAS;AAA9H,GAA1BA,CAJA,CAKA;;AACA,MAAI,OAAA,uBAAA,KAAJ,WAAA,EACI;AACAS,IAAAA,uBAAuB,CAAvBA,+CAAuB,CAAvBA,GAA2E;AAAEC,MAAAA,UAAU,EAAEV,UAAU,CAAxB,YAAA;AAAuCW,MAAAA,IAAI,EAA3C,YAAA;AAA2DC,MAAAA,IAAI,EAAE;AAAjE,KAA3EH;AARR,CAAA,CAUA,OAAA,sCAAA,EAA+C,CAAG","sourcesContent":["import React, { useContext, isValidElement, ReactEventHandler, Children } from 'react';\nimport { CardContext } from '..';\n\n/**\n * Component for declaratively expanding/collapsing card\n * @param props\n */\nexport const ExpandCard: React.FC = ({ children }) => {\n\tconst { toggleExpanded } = useContext(CardContext);\n\n\tif (!isValidElement(children)) {\n\t\tthrow new Error('Invalid children to ExpandCard');\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{Children.map(children, (child) => {\n\t\t\t\tconst { type: Type, props, key } = child;\n\t\t\t\treturn (\n\t\t\t\t\t<Type\n\t\t\t\t\t\t{...key}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tonClick={(e: ReactEventHandler) => {\n\t\t\t\t\t\t\ttoggleExpanded();\n\t\t\t\t\t\t\tif (props.onClick) {\n\t\t\t\t\t\t\t\tprops.onClick(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n};\ntry {\n    // @ts-ignore\n    ExpandCard.displayName = \"ExpandCard\";\n    // @ts-ignore\n    ExpandCard.__docgenInfo = { \"description\": \"Component for declaratively expanding/collapsing card\\n@param props\", \"displayName\": \"ExpandCard\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Card/ExpandCard.tsx#ExpandCard\"] = { docgenInfo: ExpandCard.__docgenInfo, name: \"ExpandCard\", path: \"src/components/Card/ExpandCard.tsx#ExpandCard\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}