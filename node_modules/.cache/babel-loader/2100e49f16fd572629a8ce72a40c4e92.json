{"ast":null,"code":"import _defineProperty from \"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/app/src/components/TextInput/TextInput.tsx\";\nimport React from 'react';\nimport cx from 'classnames';\nimport { FormStatus } from '..';\nexport function TextInput(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'input' : _ref$type,\n      name = _ref.name,\n      label = _ref.label,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      id = _ref.id,\n      defaultValue = _ref.defaultValue,\n      disabled = _ref.disabled,\n      status = _ref.status,\n      small = _ref.small,\n      optional = _ref.optional,\n      hideOptionalText = _ref.hideOptionalText,\n      srOnlyLabel = _ref.srOnlyLabel,\n      className = _ref.className,\n      inputProps = _ref.inputProps,\n      inline = _ref.inline,\n      beforeContent = _ref.beforeContent,\n      afterContent = _ref.afterContent;\n  var commonProps = {\n    id: id,\n    name: name,\n    disabled: disabled,\n    defaultValue: defaultValue,\n    'aria-describedby': status ? status.id : undefined,\n    'aria-invalid': status && status.type === 'error',\n    // Using aria-required to avoid default Chrome behavior\n    'aria-required': !optional\n  };\n  var inputElement;\n\n  switch (type) {\n    case 'textarea':\n      inputElement = /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n        className: cx('usa-textarea'),\n        onChange: onChange,\n        onBlur: onBlur,\n        \"aria-describedby\": status ? status.id : undefined,\n        \"aria-invalid\": status && status.type === 'error'\n      }, commonProps, inputProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }\n      }));\n      break;\n\n    case 'inline-input':\n      inputElement = /*#__PURE__*/React.createElement(React.Fragment, null, beforeContent && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"display-inline-flex padding-right-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, beforeContent), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        className: cx('usa-input', 'display-inline-flex', _defineProperty({}, \"usa-input--\".concat(status && status.type), status), {\n          'usa-input--small': small\n        }, {\n          'usa-input--inline': inline\n        }),\n        type: \"text\",\n        onChange: onChange,\n        onBlur: onChange\n      }, commonProps, inputProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }\n      })), afterContent && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"display-inline-flex padding-left-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, afterContent));\n      break;\n\n    case 'input':\n    default:\n      inputElement = /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        className: cx('usa-input', _defineProperty({}, \"usa-input--\".concat(status && status.type), status), {\n          'usa-input--small': small\n        }, {\n          'usa-input--inline': inline\n        }),\n        type: \"text\",\n        onChange: onChange,\n        onBlur: onBlur\n      }, commonProps, inputProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 5\n        }\n      }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(className || '', \" usa-form-group\").concat(status ? \" usa-form-group--\".concat(status.type) : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: cx('usa-label', status ? \"usa-label--\".concat(status.type) : '', {\n      'usa-sr-only': srOnlyLabel\n    }),\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }\n  }, label, ' ', optional && !hideOptionalText && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"usa-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 39\n    }\n  }, \"\\xA0(optional)\")), status && status.message && /*#__PURE__*/React.createElement(FormStatus, Object.assign({}, status, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  })), inputElement);\n}\n\ntry {\n  // @ts-ignore\n  TextInput.displayName = \"TextInput\"; // @ts-ignore\n\n  TextInput.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"TextInput\",\n    \"props\": {\n      \"name\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"name\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"label\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"label\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string | Element\"\n        }\n      },\n      \"id\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"id\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"defaultValue\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"defaultValue\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"disabled\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"disabled\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"status\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"status\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"any\"\n        }\n      },\n      \"small\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"small\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"optional\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"optional\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"hideOptionalText\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"hideOptionalText\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"srOnlyLabel\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"srOnlyLabel\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"className\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"className\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"inline\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"inline\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"beforeContent\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"beforeContent\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string | Element\"\n        }\n      },\n      \"afterContent\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"afterContent\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string | Element\"\n        }\n      },\n      \"type\": {\n        \"defaultValue\": {\n          value: \"input\"\n        },\n        \"description\": \"\",\n        \"name\": \"type\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"\\\"input\\\" | \\\"inline-input\\\" | \\\"textarea\\\"\"\n        }\n      },\n      \"onChange\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onChange\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"((event: any) => any) | ((event: any) => any) | ((event: any) => any)\"\n        }\n      },\n      \"onBlur\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onBlur\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"((event: any) => any) | ((event: any) => any) | ((event: any) => any)\"\n        }\n      },\n      \"inputProps\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"inputProps\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"any\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/TextInput/TextInput.tsx#TextInput\"] = {\n      docgenInfo: TextInput.__docgenInfo,\n      name: \"TextInput\",\n      path: \"src/components/TextInput/TextInput.tsx#TextInput\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}","map":{"version":3,"sources":["/home/app/src/components/TextInput/TextInput.tsx"],"names":["type","name","label","onChange","onBlur","id","defaultValue","disabled","status","small","optional","hideOptionalText","srOnlyLabel","className","inputProps","inline","beforeContent","afterContent","commonProps","inputElement","cx","TextInput","value","STORYBOOK_REACT_CLASSES","docgenInfo","path"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport { FormStatus, FormStatusProps } from '..';\n\nexport type TextInputProps =\n\t| TextInputHTMLInputElementProps\n\t| TextInlineInputHTMLInputElementProps\n\t| TextInputHTMLTextAreaElementProps;\n\ntype InternalTextInputProps = {\n\tname?: string;\n\tlabel: string | JSX.Element;\n\tid: string;\n\tdefaultValue?: string;\n\tdisabled?: boolean;\n\tstatus?: FormStatusProps;\n\tsmall?: boolean;\n\toptional?: boolean;\n\thideOptionalText?: boolean;\n\t// You might want to hide the text if it's in a fieldset that is optional, like in the date input component\n\tsrOnlyLabel?: boolean;\n\tclassName?: string;\n\tinline?: boolean;\n\tbeforeContent?: string | JSX.Element;\n\tafterContent?: string | JSX.Element;\n};\n\ntype TextInputHTMLInputElementProps = InternalTextInputProps & {\n\ttype?: 'input';\n\tonChange: (event: React.ChangeEvent<HTMLInputElement>) => any;\n\tonBlur?: (event: React.FocusEvent<HTMLInputElement>) => any;\n\tinputProps?: React.HTMLProps<HTMLInputElement>;\n};\n\ntype TextInlineInputHTMLInputElementProps = InternalTextInputProps & {\n\ttype?: 'inline-input';\n\tonChange: (event: React.ChangeEvent<HTMLInputElement>) => any;\n\tonBlur?: (event: React.FocusEvent<HTMLInputElement>) => any;\n\tinputProps?: React.HTMLProps<HTMLInputElement>;\n};\n\ntype TextInputHTMLTextAreaElementProps = InternalTextInputProps & {\n\ttype: 'textarea';\n\tonChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => any;\n\tonBlur?: (event: React.FocusEvent<HTMLTextAreaElement>) => any;\n\tinputProps?: React.HTMLProps<HTMLTextAreaElement> & { inputMode: 'text' } & { type: 'textarea' };\n};\n\nexport function TextInput({\n\ttype = 'input',\n\tname,\n\tlabel,\n\tonChange,\n\tonBlur,\n\tid,\n\tdefaultValue,\n\tdisabled,\n\tstatus,\n\tsmall,\n\toptional,\n\thideOptionalText,\n\tsrOnlyLabel,\n\tclassName,\n\tinputProps,\n\tinline,\n\tbeforeContent,\n\tafterContent,\n}:\n\t| TextInputHTMLInputElementProps\n\t| TextInlineInputHTMLInputElementProps\n\t| TextInputHTMLTextAreaElementProps) {\n\tconst commonProps = {\n\t\tid,\n\t\tname,\n\t\tdisabled,\n\t\tdefaultValue,\n\t\t'aria-describedby': status ? status.id : undefined,\n\t\t'aria-invalid': status && status.type === 'error',\n\t\t// Using aria-required to avoid default Chrome behavior\n\t\t'aria-required': !optional,\n\t};\n\n\tlet inputElement;\n\tswitch (type) {\n\t\tcase 'textarea':\n\t\t\tinputElement = (\n\t\t\t\t<textarea\n\t\t\t\t\tclassName={cx('usa-textarea')}\n\t\t\t\t\tonChange={onChange as (_: React.ChangeEvent<HTMLTextAreaElement>) => any}\n\t\t\t\t\tonBlur={onBlur as (_: React.FocusEvent<HTMLTextAreaElement>) => any}\n\t\t\t\t\taria-describedby={status ? status.id : undefined}\n\t\t\t\t\taria-invalid={status && status.type === 'error'}\n\t\t\t\t\t{...commonProps}\n\t\t\t\t\t{...(inputProps as React.HTMLProps<HTMLTextAreaElement>)}\n\t\t\t\t/>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'inline-input':\n\t\t\tinputElement = (\n\t\t\t\t<>\n\t\t\t\t\t{beforeContent && (\n\t\t\t\t\t\t<span className=\"display-inline-flex padding-right-1\">{beforeContent}</span>\n\t\t\t\t\t)}\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\t\t'usa-input',\n\t\t\t\t\t\t\t'display-inline-flex',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[`usa-input--${status && status.type}`]: status,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'usa-input--small': small,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'usa-input--inline': inline,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={onChange as (_: React.ChangeEvent<HTMLInputElement>) => any}\n\t\t\t\t\t\tonBlur={onChange as (_: React.ChangeEvent<HTMLInputElement>) => any}\n\t\t\t\t\t\t{...commonProps}\n\t\t\t\t\t\t{...(inputProps as React.HTMLProps<HTMLInputElement>)}\n\t\t\t\t\t/>\n\t\t\t\t\t{afterContent && (\n\t\t\t\t\t\t<span className=\"display-inline-flex padding-left-1\">{afterContent}</span>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t);\n\t\t\tbreak;\n\t\tcase 'input':\n\t\tdefault:\n\t\t\tinputElement = (\n\t\t\t\t<input\n\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\t'usa-input',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[`usa-input--${status && status.type}`]: status,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'usa-input--small': small,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'usa-input--inline': inline,\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={onChange as (_: React.ChangeEvent<HTMLInputElement>) => any}\n\t\t\t\t\tonBlur={onBlur as (_: React.FocusEvent<HTMLInputElement>) => any}\n\t\t\t\t\t{...commonProps}\n\t\t\t\t\t{...(inputProps as React.HTMLProps<HTMLInputElement>)}\n\t\t\t\t/>\n\t\t\t);\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`${className || ''} usa-form-group${\n\t\t\t\tstatus ? ` usa-form-group--${status.type}` : ''\n\t\t\t}`}\n\t\t>\n\t\t\t<label\n\t\t\t\tclassName={cx('usa-label', status ? `usa-label--${status.type}` : '', {\n\t\t\t\t\t'usa-sr-only': srOnlyLabel,\n\t\t\t\t})}\n\t\t\t\thtmlFor={id}\n\t\t\t>\n\t\t\t\t{label}{' '}\n\t\t\t\t{optional && !hideOptionalText && <span className=\"usa-hint\">&nbsp;(optional)</span>}\n\t\t\t</label>\n\t\t\t{status && status.message && <FormStatus {...status} />}\n\t\t\t{inputElement}\n\t\t</div>\n\t);\n}\ntry {\n    // @ts-ignore\n    TextInput.displayName = \"TextInput\";\n    // @ts-ignore\n    TextInput.__docgenInfo = { \"description\": \"\", \"displayName\": \"TextInput\", \"props\": { \"name\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"name\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string | Element\" } }, \"id\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"id\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"defaultValue\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"defaultValue\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"disabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"disabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"status\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"status\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"small\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"small\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"optional\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"optional\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"hideOptionalText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"hideOptionalText\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"srOnlyLabel\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"srOnlyLabel\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"inline\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"inline\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"beforeContent\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"beforeContent\", \"required\": false, \"type\": { \"name\": \"string | Element\" } }, \"afterContent\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"afterContent\", \"required\": false, \"type\": { \"name\": \"string | Element\" } }, \"type\": { \"defaultValue\": { value: \"input\" }, \"description\": \"\", \"name\": \"type\", \"required\": false, \"type\": { \"name\": \"\\\"input\\\" | \\\"inline-input\\\" | \\\"textarea\\\"\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": true, \"type\": { \"name\": \"((event: any) => any) | ((event: any) => any) | ((event: any) => any)\" } }, \"onBlur\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onBlur\", \"required\": false, \"type\": { \"name\": \"((event: any) => any) | ((event: any) => any) | ((event: any) => any)\" } }, \"inputProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"inputProps\", \"required\": false, \"type\": { \"name\": \"any\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/TextInput/TextInput.tsx#TextInput\"] = { docgenInfo: TextInput.__docgenInfo, name: \"TextInput\", path: \"src/components/TextInput/TextInput.tsx#TextInput\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}