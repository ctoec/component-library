{"ast":null,"code":"import _objectWithoutProperties from \"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/app/src/components/Form_New/FormFieldSet.tsx\";\n\nimport React from 'react';\nimport FormContext, { useGenericContext } from './FormContext';\nimport { FieldSet } from '../FieldSet/FieldSet';\n/**\n * Generic fieldset component for use within a Form.\n * FormFieldSet has an optional status function, which\n * determines fieldset status based on the form data,\n * to which this FormFieldSet has access via the FormContext.\n */\n\nexport var FormFieldSet = function FormFieldSet(_ref) {\n  var _ref$status = _ref.status,\n      status = _ref$status === void 0 ? function () {\n    return undefined;\n  } : _ref$status,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"status\", \"children\"]);\n\n  var _useGenericContext = useGenericContext(FormContext),\n      dataDriller = _useGenericContext.dataDriller;\n\n  return /*#__PURE__*/React.createElement(FieldSet, Object.assign({\n    status: status(dataDriller)\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }), children);\n};\n\ntry {\n  // @ts-ignore\n  FormFieldSet.displayName = \"FormFieldSet\"; // @ts-ignore\n\n  FormFieldSet.__docgenInfo = {\n    \"description\": \"Generic fieldset component for use within a Form.\\nFormFieldSet has an optional status function, which\\ndetermines fieldset status based on the form data,\\nto which this FormFieldSet has access via the FormContext.\",\n    \"displayName\": \"FormFieldSet\",\n    \"props\": {\n      \"status\": {\n        \"defaultValue\": {\n          value: \"() => undefined\"\n        },\n        \"description\": \"\",\n        \"name\": \"status\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"any\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Form_New/FormFieldSet.tsx#FormFieldSet\"] = {\n      docgenInfo: FormFieldSet.__docgenInfo,\n      name: \"FormFieldSet\",\n      path: \"src/components/Form_New/FormFieldSet.tsx#FormFieldSet\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}","map":{"version":3,"sources":["/home/app/src/components/Form_New/FormFieldSet.tsx"],"names":["FormFieldSet","status","children","props","dataDriller","useGenericContext","value","STORYBOOK_REACT_CLASSES","docgenInfo","name","path"],"mappings":";;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,WAAA,IAAA,iBAAA,QAAA,eAAA;AACA,SAAA,QAAA,QAAA,sBAAA;AAOA;;;;;;;AAMA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAIuB;AAAA,MAAA,WAAA,GAAA,IAAA,CAHlDC,MAGkD;AAAA,MAHlDA,MAGkD,GAAA,WAAA,KAAA,KAAA,CAAA,GAHzC,YAAA;AAAA,WAAA,SAAA;AAGyC,GAAA,GAAA,WAAA;AAAA,MAFlDC,QAEkD,GAAA,IAAA,CAFlDA,QAEkD;AAAA,MAD/CC,KAC+C,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,QAAA,EAAA,UAAA,CAAA,CAAA;;AAAA,MAAA,kBAAA,GAC1BE,iBAAiB,CADS,WACT,CADS;AAAA,MAC1CD,WAD0C,GAAA,kBAAA,CAAA,WAAA;;AAGlD,SAAA,aACC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AAAU,IAAA,MAAM,EAAEH,MAAM,CAAA,WAAA;AAAxB,GAAA,EAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EADD,QACC,CADD;AAPM,CAAA;;AAaP,IAAI;AACA;AACAD,EAAAA,YAAY,CAAZA,WAAAA,GAFA,cAEAA,CAFA,CAGA;;AACAA,EAAAA,YAAY,CAAZA,YAAAA,GAA4B;AAAE,mBAAF,wNAAA;AAA2O,mBAA3O,cAAA;AAA0Q,aAAS;AAAE,gBAAU;AAAE,wBAAgB;AAAEM,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAgD,uBAAhD,EAAA;AAAmE,gBAAnE,QAAA;AAAqF,oBAArF,KAAA;AAAwG,gBAAQ;AAAE,kBAAQ;AAAV;AAAhH;AAAZ;AAAnR,GAA5BN,CAJA,CAKA;;AACA,MAAI,OAAA,uBAAA,KAAJ,WAAA,EACI;AACAO,IAAAA,uBAAuB,CAAvBA,uDAAuB,CAAvBA,GAAmF;AAAEC,MAAAA,UAAU,EAAER,YAAY,CAA1B,YAAA;AAAyCS,MAAAA,IAAI,EAA7C,cAAA;AAA+DC,MAAAA,IAAI,EAAE;AAArE,KAAnFH;AARR,CAAA,CAUA,OAAA,sCAAA,EAA+C,CAAG","sourcesContent":["import React, { PropsWithChildren } from 'react';\nimport FormContext, { useGenericContext } from './FormContext';\nimport { FieldSetProps, FieldSet } from '../FieldSet/FieldSet';\nimport { FormStatusFunc } from './FormStatusFunc';\n\nexport type FormFieldSetProps<TData> = {\n\tstatus?: FormStatusFunc<TData>;\n} & Pick<FieldSetProps, Exclude<keyof FieldSetProps, 'status'>>;\n\n/**\n * Generic fieldset component for use within a Form.\n * FormFieldSet has an optional status function, which\n * determines fieldset status based on the form data,\n * to which this FormFieldSet has access via the FormContext.\n */\nexport const FormFieldSet = <TData extends object>({\n\tstatus = () => undefined,\n\tchildren,\n\t...props\n}: PropsWithChildren<FormFieldSetProps<TData>>) => {\n\tconst { dataDriller } = useGenericContext<TData>(FormContext);\n\n\treturn (\n\t\t<FieldSet status={status(dataDriller)} {...props}>\n\t\t\t{children}\n\t\t</FieldSet>\n\t);\n};\ntry {\n    // @ts-ignore\n    FormFieldSet.displayName = \"FormFieldSet\";\n    // @ts-ignore\n    FormFieldSet.__docgenInfo = { \"description\": \"Generic fieldset component for use within a Form.\\nFormFieldSet has an optional status function, which\\ndetermines fieldset status based on the form data,\\nto which this FormFieldSet has access via the FormContext.\", \"displayName\": \"FormFieldSet\", \"props\": { \"status\": { \"defaultValue\": { value: \"() => undefined\" }, \"description\": \"\", \"name\": \"status\", \"required\": false, \"type\": { \"name\": \"any\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Form_New/FormFieldSet.tsx#FormFieldSet\"] = { docgenInfo: FormFieldSet.__docgenInfo, name: \"FormFieldSet\", path: \"src/components/Form_New/FormFieldSet.tsx#FormFieldSet\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}