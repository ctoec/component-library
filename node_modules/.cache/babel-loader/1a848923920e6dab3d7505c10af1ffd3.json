{"ast":null,"code":"import _toConsumableArray from \"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/app/src/components/ChoiceList/ChoiceList.tsx\";\n\nimport React, { useState } from 'react';\nimport { TextInput, FormStatus, FieldSet } from '..';\nimport Checkbox from '../Checkbox/Checkbox';\nimport RadioButton from '../RadioButton/RadioButton';\nimport { ChoiceListExpansion } from './ChoiceListExpansion';\n/**\n * @deprecated\n */\n\nexport var ChoiceList = function ChoiceList(_ref) {\n  var type = _ref.type,\n      inputOptions = _ref.options,\n      id = _ref.id,\n      name = _ref.name,\n      onChange = _ref.onChange,\n      _ref$defaultValue = _ref.defaultValue,\n      inputSelected = _ref$defaultValue === void 0 ? [] : _ref$defaultValue,\n      legend = _ref.legend,\n      status = _ref.status,\n      disabled = _ref.disabled,\n      optional = _ref.optional,\n      className = _ref.className,\n      hint = _ref.hint,\n      horizontal = _ref.horizontal,\n      otherInputLabel = _ref.otherInputLabel,\n      label = _ref.label,\n      unselectedText = _ref.unselectedText,\n      expansionChildren = _ref.children;\n\n  var _useState = useState(inputSelected),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedItems = _useState2[0],\n      updateSelection = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      otherInput = _useState4[0],\n      updateOtherInput = _useState4[1];\n\n  var internalOptions = inputOptions;\n  var validTypesArray = React.Children.map(expansionChildren, function (child) {\n    if (React.isValidElement(child)) {\n      return !!child.type && child.type.name === ChoiceListExpansion.name;\n    } else {\n      throw new Error('Invalid element');\n    }\n  }) || [];\n  var areValid = validTypesArray.reduce(function (pendingAreValid, isValid) {\n    return pendingAreValid && isValid;\n  }, true);\n\n  if (!areValid) {\n    throw new Error('One or more children are not of type ChoiceListExpansion');\n  }\n\n  var valueToExpansionChild = React.Children.toArray(expansionChildren).reduce(function (acc, child) {\n    if (React.isValidElement(child)) {\n      return _objectSpread({}, acc, _defineProperty({}, child.props.showOnValue, child));\n    } else {\n      return acc;\n    }\n  }, {});\n  internalOptions = inputOptions.map(function (option) {\n    return _objectSpread({}, option, {\n      expansion: valueToExpansionChild[option.value]\n    });\n  });\n\n  var changeEvent = function changeEvent(event) {\n    var changedValue = event.target.value;\n\n    if (event.target.type === 'text') {\n      // If it's the other text input box\n      updateOtherInput(changedValue); // Do whatever the dev wants done when things change\n\n      onChange(event, selectedItems, changedValue);\n      return;\n    }\n\n    var newSelectedItems;\n\n    if (selectedItems.includes(changedValue)) {\n      // Uncheck a checkbox if it was already checked\n      newSelectedItems = selectedItems.filter(function (v) {\n        return v !== changedValue;\n      });\n    } else if (type === 'check') {\n      // If it wasn't already selected and it's a checkbox, add it to whatever else is selected\n      newSelectedItems = [changedValue].concat(_toConsumableArray(selectedItems));\n    } else {\n      // If it's a radio or dropdown, only this value is selected now\n      newSelectedItems = [changedValue];\n    }\n\n    updateSelection(newSelectedItems);\n    onChange(event, newSelectedItems, otherInput);\n  };\n\n  var options = _toConsumableArray(internalOptions);\n\n  if (otherInputLabel !== undefined) {\n    options.push({\n      text: otherInputLabel,\n      value: 'other'\n    });\n  }\n\n  var showotherInput = selectedItems.includes('other');\n  var children = [];\n\n  switch (type) {\n    case 'radio':\n      if (selectedItems.length > 1) {\n        throw new Error('Radio group can only have one selected value at a time.');\n      }\n\n      children = options.map(function (option) {\n        var expansion = option.expansion;\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RadioButton, Object.assign({}, option, {\n          name: option.name || name || '',\n          onChange: changeEvent,\n          selected: selectedItems.includes(option.value),\n          disabled: disabled // Including whether it's selected to force re-render... seems bad, but otherwise this option is not showing up as checked\n          ,\n          key: \"\".concat(id, \"-\").concat(option.value, \"-\").concat(selectedItems.includes(option.value)),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 7\n          }\n        })), expansion && selectedItems.includes(option.value) && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"oec-choicelist-expansion\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 8\n          }\n        }, expansion));\n      });\n      break;\n\n    case 'check':\n      children = options.map(function (option) {\n        var expansion = option.expansion;\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Checkbox, {\n          id: \"\".concat(id, \"-\").concat(option.value),\n          text: option.text,\n          value: option.value,\n          name: option.name || name || '',\n          onChange: changeEvent,\n          defaultValue: selectedItems.includes(option.value),\n          disabled: disabled,\n          key: \"\".concat(id, \"-\").concat(option.value),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 7\n          }\n        }), expansion && selectedItems.includes(option.value) && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"oec-choicelist-expansion\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 8\n          }\n        }, expansion));\n      });\n      break;\n\n    case 'select':\n      if (selectedItems.length > 1) {\n        throw new Error('Dropdown can only have one selected value at a time.');\n      }\n\n      var optionElements = [/*#__PURE__*/React.createElement(\"option\", {\n        key: \"\".concat(id, \"-unselected\"),\n        value: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 5\n        }\n      }, unselectedText || '- Select -')];\n      options.forEach(function (option) {\n        optionElements.push( /*#__PURE__*/React.createElement(\"option\", {\n          value: option.value,\n          key: \"\".concat(id, \"-\").concat(option.value),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 6\n          }\n        }, option.text));\n      });\n      children = [/*#__PURE__*/React.createElement(\"select\", {\n        key: \"\".concat(id, \"-select\"),\n        className: \"usa-select\".concat(status ? \" usa-input--\".concat(status.type) : ''),\n        name: name || '',\n        id: id,\n        onChange: changeEvent,\n        disabled: disabled,\n        value: selectedItems[0],\n        \"aria-required\": !optional // Using aria-required to avoid default Chrome behavior\n        ,\n        \"aria-describedby\": status ? status.id : undefined,\n        \"aria-invalid\": status && status.type === 'error',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 5\n        }\n      }, [].concat(optionElements))];\n  }\n\n  if (children.length === 1) {\n    var singletonInput = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"usa-form-group\".concat(status ? \" usa-form-group--\".concat(status.type) : '', \" \").concat(className || ''),\n      key: \"\".concat(id, \"-form-group\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 4\n      }\n    }, hint && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"usa-hint text-italic\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 14\n      }\n    }, hint), /*#__PURE__*/React.createElement(\"div\", {\n      className: !label ? 'margin-top-3' : '',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }\n    }), label && /*#__PURE__*/React.createElement(\"label\", {\n      className: \"usa-label\".concat(status ? \" usa-label--\".concat(status.type) : ''),\n      htmlFor: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 6\n      }\n    }, label), status && status.message && /*#__PURE__*/React.createElement(FormStatus, Object.assign({}, status, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 34\n      }\n    })), _toConsumableArray(children), options.map(function (option) {\n      var expansion = option.expansion;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: \"\".concat(option.value, \"-expansion\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 7\n        }\n      }, expansion && selectedItems.includes(option.value) && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"oec-choicelist-expansion\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }\n      }, option.expansion));\n    }));\n\n    if (!showotherInput) {\n      return singletonInput;\n    }\n\n    children = [singletonInput];\n  }\n\n  return /*#__PURE__*/React.createElement(FieldSet // Will never actually be undefined\n  , {\n    legend: legend || label || '',\n    status: status,\n    id: \"\".concat(id, \"-fieldset\"),\n    \"aria-describedby\": status ? status.id : undefined,\n    className: className,\n    childrenGroupClassName: \"margin-top-3\",\n    hint: hint,\n    optional: optional,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: horizontal ? 'grid-row flex-align-start grid-gap' : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 4\n    }\n  }, _toConsumableArray(children), showotherInput && otherInputLabel !== undefined && /*#__PURE__*/React.createElement(TextInput, {\n    type: \"input\",\n    id: \"\".concat(id, \"-other\"),\n    name: name || '',\n    label: otherInputLabel,\n    onChange: changeEvent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 6\n    }\n  })));\n};\n\ntry {\n  // @ts-ignore\n  ChoiceList.displayName = \"ChoiceList\"; // @ts-ignore\n\n  ChoiceList.__docgenInfo = {\n    \"description\": \"@deprecated\",\n    \"displayName\": \"ChoiceList\",\n    \"props\": {}\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/ChoiceList/ChoiceList.tsx#ChoiceList\"] = {\n      docgenInfo: ChoiceList.__docgenInfo,\n      name: \"ChoiceList\",\n      path: \"src/components/ChoiceList/ChoiceList.tsx#ChoiceList\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}","map":{"version":3,"sources":["/home/app/src/components/ChoiceList/ChoiceList.tsx"],"names":["ChoiceList","type","options","inputOptions","id","name","onChange","defaultValue","inputSelected","legend","status","disabled","optional","className","hint","horizontal","otherInputLabel","label","unselectedText","children","expansionChildren","selectedItems","updateSelection","useState","otherInput","updateOtherInput","internalOptions","validTypesArray","React","child","ChoiceListExpansion","areValid","pendingAreValid","valueToExpansionChild","expansion","option","changeEvent","changedValue","event","newSelectedItems","v","text","value","showotherInput","optionElements","singletonInput","STORYBOOK_REACT_CLASSES","docgenInfo","path"],"mappings":";;;;;;;;AAAA,OAAA,KAAA,IAAA,QAAA,QAAA,OAAA;AACA,SAAA,SAAA,EAAA,UAAA,EAAA,QAAA,QAAA,IAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,OAAA,WAAA,MAAA,4BAAA;AACA,SAAA,mBAAA,QAAA,uBAAA;AAkDA;;;;AAGA,OAAO,IAAMA,UAAqC,GAAG,SAAxCA,UAAwC,CAAA,IAAA,EAkB/C;AAAA,MAjBLC,IAiBK,GAAA,IAAA,CAjBLA,IAiBK;AAAA,MAhBIE,YAgBJ,GAAA,IAAA,CAhBLD,OAgBK;AAAA,MAfLE,EAeK,GAAA,IAAA,CAfLA,EAeK;AAAA,MAdLC,IAcK,GAAA,IAAA,CAdLA,IAcK;AAAA,MAbLC,QAaK,GAAA,IAAA,CAbLA,QAaK;AAAA,MAAA,iBAAA,GAAA,IAAA,CAZLC,YAYK;AAAA,MAZSC,aAYT,GAAA,iBAAA,KAAA,KAAA,CAAA,GAZyB,EAYzB,GAAA,iBAAA;AAAA,MAXLC,MAWK,GAAA,IAAA,CAXLA,MAWK;AAAA,MAVLC,MAUK,GAAA,IAAA,CAVLA,MAUK;AAAA,MATLC,QASK,GAAA,IAAA,CATLA,QASK;AAAA,MARLC,QAQK,GAAA,IAAA,CARLA,QAQK;AAAA,MAPLC,SAOK,GAAA,IAAA,CAPLA,SAOK;AAAA,MANLC,IAMK,GAAA,IAAA,CANLA,IAMK;AAAA,MALLC,UAKK,GAAA,IAAA,CALLA,UAKK;AAAA,MAJLC,eAIK,GAAA,IAAA,CAJLA,eAIK;AAAA,MAHLC,KAGK,GAAA,IAAA,CAHLA,KAGK;AAAA,MAFLC,cAEK,GAAA,IAAA,CAFLA,cAEK;AAAA,MADKE,iBACL,GAAA,IAAA,CADLD,QACK;;AAAA,MAAA,SAAA,GACoCI,QAAQ,CAD5C,aAC4C,CAD5C;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MACEF,aADF,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MACiBC,eADjB,GAAA,UAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,UAAA,GAEkCC,QAFlC,EAAA;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAA,MAEEC,UAFF,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAEcC,gBAFd,GAAA,UAAA,CAAA,CAAA,CAAA;;AAIL,MAAIC,eAAe,GAAnB,YAAA;AACA,MAAMC,eAA0B,GAC/B,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,iBAAA,EAAsC,UAAA,KAAA,EAAW;AAChD,QAAIC,KAAK,CAALA,cAAAA,CAAJ,KAAIA,CAAJ,EAAiC;AAChC,aAAO,CAAC,CAACC,KAAK,CAAP,IAAA,IAAiBA,KAAK,CAAN,IAACA,CAAD,IAACA,KAAiCC,mBAAmB,CAA5E,IAAA;AADD,KAAA,MAEO;AACN,YAAM,IAAA,KAAA,CAAN,iBAAM,CAAN;AACA;AALF,GAAA,KADD,EAAA;AAQA,MAAMC,QAAQ,GAAG,eAAe,CAAf,MAAA,CAChB,UAAA,eAAA,EAAA,OAAA,EAAA;AAAA,WAA8BC,eAAe,IAA7C,OAAA;AADgB,GAAA,EAAjB,IAAiB,CAAjB;;AAIA,MAAI,CAAJ,QAAA,EAAe;AACd,UAAM,IAAA,KAAA,CAAN,0DAAM,CAAN;AACA;;AACD,MAAMC,qBAAqB,GAAG,KAAK,CAAL,QAAA,CAAA,OAAA,CAAA,iBAAA,EAAA,MAAA,CAE3B,UAAA,GAAA,EAAA,KAAA,EAAgB;AAClB,QAAIL,KAAK,CAALA,cAAAA,CAAJ,KAAIA,CAAJ,EAAiC;AAChC,aAAA,aAAA,CAAA,EAAA,EAAA,GAAA,EAAA,eAAA,CAAA,EAAA,EAEEC,KAAK,CAALA,KAAAA,CAFF,WAAA,EAAA,KAAA,CAAA,CAAA;AADD,KAAA,MAKO;AACN,aAAA,GAAA;AACA;AAV4B,GAAA,EAA9B,EAA8B,CAA9B;AAYAH,EAAAA,eAAe,GAAG,YAAY,CAAZ,GAAA,CAAiB,UAAA,MAAA,EAAA;AAAA,WAAA,aAAA,CAAA,EAAA,EAAA,MAAA,EAAA;AAElCQ,MAAAA,SAAS,EAAED,qBAAqB,CAACE,MAAM,CAAP,KAAA;AAFE,KAAA,CAAA;AAAnCT,GAAkB,CAAlBA;;AAKA,MAAMU,WAAW,GAAG,SAAdA,WAAc,CAAA,KAAA,EAAiD;AACpE,QAAMC,YAAY,GAAGC,KAAK,CAALA,MAAAA,CAArB,KAAA;;AACA,QAAIA,KAAK,CAALA,MAAAA,CAAAA,IAAAA,KAAJ,MAAA,EAAkC;AACjC;AACAb,MAAAA,gBAAgB,CAFiB,YAEjB,CAAhBA,CAFiC,CAGjC;;AACAnB,MAAAA,QAAQ,CAAA,KAAA,EAAA,aAAA,EAARA,YAAQ,CAARA;AACA;AACA;;AACD,QAAA,gBAAA;;AACA,QAAIe,aAAa,CAAbA,QAAAA,CAAJ,YAAIA,CAAJ,EAA0C;AACzC;AACAkB,MAAAA,gBAAgB,GAAG,aAAa,CAAb,MAAA,CAAqB,UAAA,CAAA,EAAA;AAAA,eAAOC,CAAC,KAAR,YAAA;AAAxCD,OAAmB,CAAnBA;AAFD,KAAA,MAGO,IAAItC,IAAI,KAAR,OAAA,EAAsB;AAC5B;AACAsC,MAAAA,gBAAgB,GAAA,CAAA,YAAA,EAAA,MAAA,CAAA,kBAAA,CAAhBA,aAAgB,CAAA,CAAhBA;AAFM,KAAA,MAGA;AACN;AACAA,MAAAA,gBAAgB,GAAG,CAAnBA,YAAmB,CAAnBA;AACA;;AACDjB,IAAAA,eAAe,CAAfA,gBAAe,CAAfA;AACAhB,IAAAA,QAAQ,CAAA,KAAA,EAAA,gBAAA,EAARA,UAAQ,CAARA;AArBD,GAAA;;AAwBA,MAAMJ,OAAO,GAAA,kBAAA,CAAb,eAAa,CAAb;;AACA,MAAIc,eAAe,KAAnB,SAAA,EAAmC;AAClCd,IAAAA,OAAO,CAAPA,IAAAA,CAAa;AACZuC,MAAAA,IAAI,EADQ,eAAA;AAEZC,MAAAA,KAAK,EAAE;AAFK,KAAbxC;AAIA;;AAED,MAAMyC,cAAc,GAAGtB,aAAa,CAAbA,QAAAA,CAAvB,OAAuBA,CAAvB;AACA,MAAIF,QAAuB,GAA3B,EAAA;;AAEA,UAAA,IAAA;AACC,SAAA,OAAA;AACC,UAAIE,aAAa,CAAbA,MAAAA,GAAJ,CAAA,EAA8B;AAC7B,cAAM,IAAA,KAAA,CAAN,yDAAM,CAAN;AACA;;AACDF,MAAAA,QAAQ,GAAG,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAY;AAClC,YAAMe,SAAS,GAAGC,MAAM,CAAxB,SAAA;AACA,eAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,EAAA;AAEC,UAAA,IAAI,EAAEA,MAAM,CAANA,IAAAA,IAAAA,IAAAA,IAFP,EAAA;AAGC,UAAA,QAAQ,EAHT,WAAA;AAIC,UAAA,QAAQ,EAAEd,aAAa,CAAbA,QAAAA,CAAuBc,MAAM,CAJxC,KAIWd,CAJX;AAKC,UAAA,QAAQ,EALT,QAAA,CAMC;AAND;AAOC,UAAA,GAAG,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,MAAA,CAAWc,MAAM,CAAjB,KAAA,EAAA,GAAA,EAAA,MAAA,CAA2Bd,aAAa,CAAbA,QAAAA,CAAuBc,MAAM,CAP5D,KAO+Bd,CAA3B,CAPJ;AAAA,UAAA,MAAA,EAAA,KAAA;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,YAAA;AAAA,YAAA,UAAA,EAAA,GAAA;AAAA,YAAA,YAAA,EAAA;AAAA;AAAA,SAAA,CAAA,CADD,EAUEa,SAAS,IAAIb,aAAa,CAAbA,QAAAA,CAAuBc,MAAM,CAA1CD,KAAab,CAAba,IAAAA,aACA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,UAAA,SAAS,EAAd,0BAAA;AAAA,UAAA,MAAA,EAAA,KAAA;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,YAAA;AAAA,YAAA,UAAA,EAAA,GAAA;AAAA,YAAA,YAAA,EAAA;AAAA;AAAA,SAAA,EAZH,SAYG,CAXF,CADD;AAFDf,OAAW,CAAXA;AAmBA;;AACD,SAAA,OAAA;AACCA,MAAAA,QAAQ,GAAG,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAY;AAClC,YAAMe,SAAS,GAAGC,MAAM,CAAxB,SAAA;AACA,eAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAA,aACC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACC,UAAA,EAAE,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,MAAA,CAAWA,MAAM,CADpB,KACG,CADH;AAEC,UAAA,IAAI,EAAEA,MAAM,CAFb,IAAA;AAGC,UAAA,KAAK,EAAEA,MAAM,CAHd,KAAA;AAIC,UAAA,IAAI,EAAEA,MAAM,CAANA,IAAAA,IAAAA,IAAAA,IAJP,EAAA;AAKC,UAAA,QAAQ,EALT,WAAA;AAMC,UAAA,YAAY,EAAEd,aAAa,CAAbA,QAAAA,CAAuBc,MAAM,CAN5C,KAMed,CANf;AAOC,UAAA,QAAQ,EAPT,QAAA;AAQC,UAAA,GAAG,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,MAAA,CAAWc,MAAM,CARrB,KAQI,CARJ;AAAA,UAAA,MAAA,EAAA,KAAA;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,YAAA;AAAA,YAAA,UAAA,EAAA,GAAA;AAAA,YAAA,YAAA,EAAA;AAAA;AAAA,SAAA,CADD,EAWED,SAAS,IAAIb,aAAa,CAAbA,QAAAA,CAAuBc,MAAM,CAA1CD,KAAab,CAAba,IAAAA,aACA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,UAAA,SAAS,EAAd,0BAAA;AAAA,UAAA,MAAA,EAAA,KAAA;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,YAAA;AAAA,YAAA,UAAA,EAAA,GAAA;AAAA,YAAA,YAAA,EAAA;AAAA;AAAA,SAAA,EAbH,SAaG,CAZF,CADD;AAFDf,OAAW,CAAXA;AAoBA;;AACD,SAAA,QAAA;AACC,UAAIE,aAAa,CAAbA,MAAAA,GAAJ,CAAA,EAA8B;AAC7B,cAAM,IAAA,KAAA,CAAN,sDAAM,CAAN;AACA;;AACD,UAAMuB,cAAc,GAAG,CAAA,aACtB,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,QAAA,GAAG,EAAA,GAAA,MAAA,CAAA,EAAA,EAAX,aAAW,CAAX;AAAiC,QAAA,KAAK,EAAtC,EAAA;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,GAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EACE1B,cAAc,IAFjB,YACC,CADsB,CAAvB;AAKAhB,MAAAA,OAAO,CAAPA,OAAAA,CAAgB,UAAA,MAAA,EAAY;AAC3B0C,QAAAA,cAAc,CAAdA,IAAAA,EAAAA,aACC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,UAAA,KAAK,EAAET,MAAM,CAArB,KAAA;AAA6B,UAAA,GAAG,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,MAAA,CAAWA,MAAM,CAAjD,KAAgC,CAAhC;AAAA,UAAA,MAAA,EAAA,KAAA;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,QAAA,EAAA,YAAA;AAAA,YAAA,UAAA,EAAA,GAAA;AAAA,YAAA,YAAA,EAAA;AAAA;AAAA,SAAA,EACEA,MAAM,CAFTS,IACC,CADDA;AADD1C,OAAAA;AAOAiB,MAAAA,QAAQ,GAAG,CAAA,aACV,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACC,QAAA,GAAG,EAAA,GAAA,MAAA,CAAA,EAAA,EADJ,SACI,CADJ;AAEC,QAAA,SAAS,EAAA,aAAA,MAAA,CAAeT,MAAM,GAAA,eAAA,MAAA,CAAkBA,MAAM,CAAxB,IAAA,CAAA,GAF/B,EAEU,CAFV;AAGC,QAAA,IAAI,EAAEL,IAAI,IAHX,EAAA;AAIC,QAAA,EAAE,EAJH,EAAA;AAKC,QAAA,QAAQ,EALT,WAAA;AAMC,QAAA,QAAQ,EANT,QAAA;AAOC,QAAA,KAAK,EAAEgB,aAAa,CAPrB,CAOqB,CAPrB;AAQC,yBAAe,CARhB,QAAA,CASC;AATD;AAUC,4BAAkBX,MAAM,GAAGA,MAAM,CAAT,EAAA,GAVzB,SAAA;AAWC,wBAAcA,MAAM,IAAIA,MAAM,CAANA,IAAAA,KAXzB,OAAA;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,GAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EAAA,GAAA,MAAA,CADDS,cACC,CAAA,CADU,CAAXA;AA/DF;;AAkFA,MAAIA,QAAQ,CAARA,MAAAA,KAAJ,CAAA,EAA2B;AAC1B,QAAM0B,cAAc,GAAA,aACnB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACC,MAAA,SAAS,EAAA,iBAAA,MAAA,CAAmBnC,MAAM,GAAA,oBAAA,MAAA,CAAuBA,MAAM,CAA7B,IAAA,CAAA,GAAzB,EAAA,EAAA,GAAA,EAAA,MAAA,CACRG,SAAS,IAFX,EACU,CADV;AAIC,MAAA,GAAG,EAAA,GAAA,MAAA,CAAA,EAAA,EAJJ,aAII,CAJJ;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,GAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EAMEC,IAAI,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAf,sBAAA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,GAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EANV,IAMU,CANV,EAAA,aAOC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,CAAA,KAAA,GAAA,cAAA,GAAhB,EAAA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,GAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,CAPD,EAQEG,KAAK,IAAA,aACL,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAO,MAAA,SAAS,EAAA,YAAA,MAAA,CAAcP,MAAM,GAAA,eAAA,MAAA,CAAkBA,MAAM,CAAxB,IAAA,CAAA,GAApC,EAAgB,CAAhB;AAA4E,MAAA,OAAO,EAAnF,EAAA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,GAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,EATF,KASE,CATF,EAaEA,MAAM,IAAIA,MAAM,CAAhBA,OAAAA,IAAAA,aAA4B,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA,EAAA;AAAA,MAAA,MAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,GAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,CAAA,CAb9B,EAAA,kBAAA,CAAA,QAAA,CAAA,EAeE,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAY;AACxB,UAAMwB,SAAS,GAAGC,MAAM,CAAxB,SAAA;AACA,aAAA,aACC,KAAA,CAAA,aAAA,CAAC,KAAD,CAAA,QAAA,EAAA;AAAgB,QAAA,GAAG,EAAA,GAAA,MAAA,CAAKA,MAAM,CAAX,KAAA,EAAnB,YAAmB,CAAnB;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,GAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EACED,SAAS,IAAIb,aAAa,CAAbA,QAAAA,CAAuBc,MAAM,CAA1CD,KAAab,CAAba,IAAAA,aACA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAd,0BAAA;AAAA,QAAA,MAAA,EAAA,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,GAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EAA2CC,MAAM,CAHpD,SAGG,CAFF,CADD;AAlBH,KAgBG,CAfF,CADD;;AA4BA,QAAI,CAAJ,cAAA,EAAqB;AACpB,aAAA,cAAA;AACA;;AACDhB,IAAAA,QAAQ,GAAG,CAAXA,cAAW,CAAXA;AACA;;AAED,SAAA,aACC,KAAA,CAAA,aAAA,CAAA,QAAA,CACC;AADD,IAAA;AAEC,IAAA,MAAM,EAAEV,MAAM,IAANA,KAAAA,IAFT,EAAA;AAGC,IAAA,MAAM,EAHP,MAAA;AAIC,IAAA,EAAE,EAAA,GAAA,MAAA,CAAA,EAAA,EAJH,WAIG,CAJH;AAKC,wBAAkBC,MAAM,GAAGA,MAAM,CAAT,EAAA,GALzB,SAAA;AAMC,IAAA,SAAS,EANV,SAAA;AAOC,IAAA,sBAAsB,EAPvB,cAAA;AAQC,IAAA,IAAI,EARL,IAAA;AASC,IAAA,QAAQ,EATT,QAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,aAWC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEK,UAAU,GAAA,oCAAA,GAA1B,EAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAA,kBAAA,CAAA,QAAA,CAAA,EAEE4B,cAAc,IAAI3B,eAAe,KAAjC2B,SAAAA,IAAAA,aACA,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AACC,IAAA,IAAI,EADL,OAAA;AAEC,IAAA,EAAE,EAAA,GAAA,MAAA,CAAA,EAAA,EAFH,QAEG,CAFH;AAGC,IAAA,IAAI,EAAEtC,IAAI,IAHX,EAAA;AAIC,IAAA,KAAK,EAJN,eAAA;AAKC,IAAA,QAAQ,EALT,WAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,GAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAHF,CAXD,CADD;AA/MM,CAAA;;AA0OP,IAAI;AACA;AACAL,EAAAA,UAAU,CAAVA,WAAAA,GAFA,YAEAA,CAFA,CAGA;;AACAA,EAAAA,UAAU,CAAVA,YAAAA,GAA0B;AAAE,mBAAF,aAAA;AAAgC,mBAAhC,YAAA;AAA6D,aAAS;AAAtE,GAA1BA,CAJA,CAKA;;AACA,MAAI,OAAA,uBAAA,KAAJ,WAAA,EACI;AACA8C,IAAAA,uBAAuB,CAAvBA,qDAAuB,CAAvBA,GAAiF;AAAEC,MAAAA,UAAU,EAAE/C,UAAU,CAAxB,YAAA;AAAuCK,MAAAA,IAAI,EAA3C,YAAA;AAA2D2C,MAAAA,IAAI,EAAE;AAAjE,KAAjFF;AARR,CAAA,CAUA,OAAA,sCAAA,EAA+C,CAAG","sourcesContent":["import React, { useState } from 'react';\nimport { TextInput, FormStatus, FormStatusProps, FieldSet } from '..';\nimport Checkbox from '../Checkbox/Checkbox';\nimport RadioButton from '../RadioButton/RadioButton';\nimport { ChoiceListExpansion } from './ChoiceListExpansion';\n\ntype Option = {\n\ttext: string;\n\tvalue: string;\n\tname?: string;\n};\n\ntype InternalOption = Option & {\n\texpansion?: JSX.Element;\n};\n\nexport type HTMLChoiceElement = HTMLInputElement | HTMLSelectElement;\n\ntype InternalChoiceListProps = {\n\toptions: Option[];\n\tid: string;\n\tname?: string;\n\tonChange: (\n\t\te: React.ChangeEvent<HTMLChoiceElement>,\n\t\tselectedValues: string[],\n\t\totherInput?: string\n\t) => any;\n\tdefaultValue?: string[];\n\tstatus?: FormStatusProps;\n\tdisabled?: boolean;\n\toptional?: boolean;\n\tclassName?: string;\n\thint?: string;\n\totherInputLabel?: string;\n};\n\nexport type RadioOrChecklistProps = InternalChoiceListProps & {\n\ttype: 'radio' | 'check';\n\tlegend: string;\n\thorizontal?: boolean;\n\tlabel?: never;\n\tunselectedText?: never;\n};\n\ntype DropdownProps = InternalChoiceListProps & {\n\ttype: 'select';\n\tlabel: string;\n\tunselectedText?: string;\n\thorizontal?: never;\n\tlegend?: never;\n};\n\nexport type ChoiceListProps = RadioOrChecklistProps | DropdownProps;\n\n/**\n * @deprecated\n */\nexport const ChoiceList: React.FC<ChoiceListProps> = ({\n\ttype,\n\toptions: inputOptions,\n\tid,\n\tname,\n\tonChange,\n\tdefaultValue: inputSelected = [],\n\tlegend,\n\tstatus,\n\tdisabled,\n\toptional,\n\tclassName,\n\thint,\n\thorizontal,\n\totherInputLabel,\n\tlabel,\n\tunselectedText,\n\tchildren: expansionChildren,\n}) => {\n\tconst [selectedItems, updateSelection] = useState(inputSelected);\n\tconst [otherInput, updateOtherInput] = useState<string | undefined>();\n\n\tlet internalOptions = inputOptions as InternalOption[];\n\tconst validTypesArray: boolean[] =\n\t\tReact.Children.map(expansionChildren, (child) => {\n\t\t\tif (React.isValidElement(child)) {\n\t\t\t\treturn !!child.type && (child.type as Function).name === ChoiceListExpansion.name;\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid element');\n\t\t\t}\n\t\t}) || [];\n\tconst areValid = validTypesArray.reduce(\n\t\t(pendingAreValid, isValid) => pendingAreValid && isValid,\n\t\ttrue\n\t);\n\tif (!areValid) {\n\t\tthrow new Error('One or more children are not of type ChoiceListExpansion');\n\t}\n\tconst valueToExpansionChild = React.Children.toArray(expansionChildren).reduce<{\n\t\t[value: string]: JSX.Element;\n\t}>((acc, child) => {\n\t\tif (React.isValidElement(child)) {\n\t\t\treturn {\n\t\t\t\t...acc,\n\t\t\t\t[child.props.showOnValue as string]: child,\n\t\t\t};\n\t\t} else {\n\t\t\treturn acc;\n\t\t}\n\t}, {});\n\tinternalOptions = inputOptions.map((option) => ({\n\t\t...option,\n\t\texpansion: valueToExpansionChild[option.value],\n\t}));\n\n\tconst changeEvent = (event: React.ChangeEvent<HTMLChoiceElement>) => {\n\t\tconst changedValue = event.target.value;\n\t\tif (event.target.type === 'text') {\n\t\t\t// If it's the other text input box\n\t\t\tupdateOtherInput(changedValue);\n\t\t\t// Do whatever the dev wants done when things change\n\t\t\tonChange(event, selectedItems, changedValue);\n\t\t\treturn;\n\t\t}\n\t\tlet newSelectedItems: string[];\n\t\tif (selectedItems.includes(changedValue)) {\n\t\t\t// Uncheck a checkbox if it was already checked\n\t\t\tnewSelectedItems = selectedItems.filter((v) => v !== changedValue);\n\t\t} else if (type === 'check') {\n\t\t\t// If it wasn't already selected and it's a checkbox, add it to whatever else is selected\n\t\t\tnewSelectedItems = [changedValue, ...selectedItems];\n\t\t} else {\n\t\t\t// If it's a radio or dropdown, only this value is selected now\n\t\t\tnewSelectedItems = [changedValue];\n\t\t}\n\t\tupdateSelection(newSelectedItems);\n\t\tonChange(event, newSelectedItems, otherInput);\n\t};\n\n\tconst options = [...internalOptions];\n\tif (otherInputLabel !== undefined) {\n\t\toptions.push({\n\t\t\ttext: otherInputLabel,\n\t\t\tvalue: 'other',\n\t\t});\n\t}\n\n\tconst showotherInput = selectedItems.includes('other');\n\tlet children: JSX.Element[] = [];\n\n\tswitch (type) {\n\t\tcase 'radio':\n\t\t\tif (selectedItems.length > 1) {\n\t\t\t\tthrow new Error('Radio group can only have one selected value at a time.');\n\t\t\t}\n\t\t\tchildren = options.map((option) => {\n\t\t\t\tconst expansion = option.expansion;\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<RadioButton\n\t\t\t\t\t\t\t{...option}\n\t\t\t\t\t\t\tname={option.name || name || ''}\n\t\t\t\t\t\t\tonChange={changeEvent}\n\t\t\t\t\t\t\tselected={selectedItems.includes(option.value)}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\t// Including whether it's selected to force re-render... seems bad, but otherwise this option is not showing up as checked\n\t\t\t\t\t\t\tkey={`${id}-${option.value}-${selectedItems.includes(option.value)}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{expansion && selectedItems.includes(option.value) && (\n\t\t\t\t\t\t\t<div className=\"oec-choicelist-expansion\">{expansion}</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t});\n\t\t\tbreak;\n\t\tcase 'check':\n\t\t\tchildren = options.map((option) => {\n\t\t\t\tconst expansion = option.expansion;\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tid={`${id}-${option.value}`}\n\t\t\t\t\t\t\ttext={option.text}\n\t\t\t\t\t\t\tvalue={option.value}\n\t\t\t\t\t\t\tname={option.name || name || ''}\n\t\t\t\t\t\t\tonChange={changeEvent}\n\t\t\t\t\t\t\tdefaultValue={selectedItems.includes(option.value)}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\tkey={`${id}-${option.value}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{expansion && selectedItems.includes(option.value) && (\n\t\t\t\t\t\t\t<div className=\"oec-choicelist-expansion\">{expansion}</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t});\n\t\t\tbreak;\n\t\tcase 'select':\n\t\t\tif (selectedItems.length > 1) {\n\t\t\t\tthrow new Error('Dropdown can only have one selected value at a time.');\n\t\t\t}\n\t\t\tconst optionElements = [\n\t\t\t\t<option key={`${id}-unselected`} value=\"\">\n\t\t\t\t\t{unselectedText || '- Select -'}\n\t\t\t\t</option>,\n\t\t\t];\n\t\t\toptions.forEach((option) => {\n\t\t\t\toptionElements.push(\n\t\t\t\t\t<option value={option.value} key={`${id}-${option.value}`}>\n\t\t\t\t\t\t{option.text}\n\t\t\t\t\t</option>\n\t\t\t\t);\n\t\t\t});\n\t\t\tchildren = [\n\t\t\t\t<select\n\t\t\t\t\tkey={`${id}-select`}\n\t\t\t\t\tclassName={`usa-select${status ? ` usa-input--${status.type}` : ''}`}\n\t\t\t\t\tname={name || ''}\n\t\t\t\t\tid={id}\n\t\t\t\t\tonChange={changeEvent}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tvalue={selectedItems[0]}\n\t\t\t\t\taria-required={!optional}\n\t\t\t\t\t// Using aria-required to avoid default Chrome behavior\n\t\t\t\t\taria-describedby={status ? status.id : undefined}\n\t\t\t\t\taria-invalid={status && status.type === 'error'}\n\t\t\t\t>\n\t\t\t\t\t{[...optionElements]}\n\t\t\t\t</select>,\n\t\t\t];\n\t}\n\n\tif (children.length === 1) {\n\t\tconst singletonInput = (\n\t\t\t<div\n\t\t\t\tclassName={`usa-form-group${status ? ` usa-form-group--${status.type}` : ''} ${\n\t\t\t\t\tclassName || ''\n\t\t\t\t}`}\n\t\t\t\tkey={`${id}-form-group`}\n\t\t\t>\n\t\t\t\t{hint && <span className=\"usa-hint text-italic\">{hint}</span>}\n\t\t\t\t<div className={!label ? 'margin-top-3' : ''}></div>\n\t\t\t\t{label && (\n\t\t\t\t\t<label className={`usa-label${status ? ` usa-label--${status.type}` : ''}`} htmlFor={id}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</label>\n\t\t\t\t)}\n\t\t\t\t{status && status.message && <FormStatus {...status} />}\n\t\t\t\t{[...children]}\n\t\t\t\t{options.map((option) => {\n\t\t\t\t\tconst expansion = option.expansion;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<React.Fragment key={`${option.value}-expansion`}>\n\t\t\t\t\t\t\t{expansion && selectedItems.includes(option.value) && (\n\t\t\t\t\t\t\t\t<div className=\"oec-choicelist-expansion\">{option.expansion}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t\tif (!showotherInput) {\n\t\t\treturn singletonInput;\n\t\t}\n\t\tchildren = [singletonInput];\n\t}\n\n\treturn (\n\t\t<FieldSet\n\t\t\t// Will never actually be undefined\n\t\t\tlegend={legend || label || ''}\n\t\t\tstatus={status}\n\t\t\tid={`${id}-fieldset`}\n\t\t\taria-describedby={status ? status.id : undefined}\n\t\t\tclassName={className}\n\t\t\tchildrenGroupClassName=\"margin-top-3\"\n\t\t\thint={hint}\n\t\t\toptional={optional}\n\t\t>\n\t\t\t<div className={horizontal ? 'grid-row flex-align-start grid-gap' : ''}>\n\t\t\t\t{[...children]}\n\t\t\t\t{showotherInput && otherInputLabel !== undefined && (\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\ttype=\"input\"\n\t\t\t\t\t\tid={`${id}-other`}\n\t\t\t\t\t\tname={name || ''}\n\t\t\t\t\t\tlabel={otherInputLabel}\n\t\t\t\t\t\tonChange={changeEvent}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</FieldSet>\n\t);\n};\ntry {\n    // @ts-ignore\n    ChoiceList.displayName = \"ChoiceList\";\n    // @ts-ignore\n    ChoiceList.__docgenInfo = { \"description\": \"@deprecated\", \"displayName\": \"ChoiceList\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/ChoiceList/ChoiceList.tsx#ChoiceList\"] = { docgenInfo: ChoiceList.__docgenInfo, name: \"ChoiceList\", path: \"src/components/ChoiceList/ChoiceList.tsx#ChoiceList\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}