{"ast":null,"code":"import _defineProperty from \"/home/melanie/Code/component-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/melanie/Code/component-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/melanie/Code/component-library/src/components/Card/Card.tsx\";\nimport React, { Children, useEffect, useState, isValidElement, createContext, useCallback } from 'react';\nimport cx from 'classnames';\nimport { Tag } from '..';\nimport { CardExpansion } from './CardExpansion';\nvar CardContext = createContext({\n  isExpanded: false,\n  toggleExpanded: function toggleExpanded() {}\n});\nvar CardProvider = CardContext.Provider;\nexport { CardContext };\nexport function Card(_ref) {\n  var appearance = _ref.appearance,\n      className = _ref.className,\n      _ref$expanded = _ref.expanded,\n      expanded = _ref$expanded === void 0 ? false : _ref$expanded,\n      onExpansionChange = _ref.onExpansionChange,\n      forceClose = _ref.forceClose,\n      _ref$showTag = _ref.showTag,\n      showTag = _ref$showTag === void 0 ? false : _ref$showTag,\n      children = _ref.children;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      previousIsExpanded = _useState2[0],\n      setPreviousIsExpanded = _useState2[1];\n\n  var _useState3 = useState(expanded),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isExpanded = _useState4[0],\n      setIsExpanded = _useState4[1];\n\n  var updateExpanded = useCallback(function (_) {\n    setPreviousIsExpanded(isExpanded);\n    setIsExpanded(_);\n  }, [setPreviousIsExpanded, setIsExpanded, isExpanded]);\n\n  var toggleExpanded = function toggleExpanded() {\n    return updateExpanded(!isExpanded);\n  };\n\n  useEffect(function () {\n    if (onExpansionChange && previousIsExpanded !== undefined) {\n      onExpansionChange(isExpanded);\n    }\n  }, [isExpanded, previousIsExpanded]);\n  useEffect(function () {\n    if (forceClose) {\n      updateExpanded(false);\n    }\n  }, [forceClose, updateExpanded]);\n  return /*#__PURE__*/React.createElement(CardProvider, {\n    value: {\n      isExpanded: isExpanded,\n      toggleExpanded: toggleExpanded\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('oec-card', _defineProperty({}, \"oec-card--\".concat(appearance), appearance), className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, showTag && /*#__PURE__*/React.createElement(Tag, {\n    className: \"oec-card-tag\",\n    text: \"NEW\",\n    color: \"theme-color-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"oec-card-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, Children.map(children, function (child) {\n    if (!isValidElement(child)) {\n      throw new Error('Invalid card child element');\n    }\n\n    var type = typeof child.type === 'string' ? child.type : child.type.name;\n\n    if (type !== CardExpansion.name) {\n      return child;\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cx({\n      'oec-card-divider': isExpanded\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), isExpanded && /*#__PURE__*/React.createElement(\"div\", {\n    className: cx('oec-card-cell', 'oec-card-expansion'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }, Children.map(children, function (child) {\n    if (!isValidElement(child)) {\n      throw new Error('Invalid card child element');\n    }\n\n    var type = typeof child.type === 'string' ? child.type : child.type.name;\n\n    if (type === CardExpansion.name) {\n      return child;\n    }\n  }))));\n}\n\ntry {\n  // @ts-ignore\n  Card.displayName = \"Card\"; // @ts-ignore\n\n  Card.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Card\",\n    \"props\": {\n      \"appearance\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"appearance\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"NavItemType\"\n        }\n      },\n      \"className\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"className\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"expanded\": {\n        \"defaultValue\": {\n          value: false\n        },\n        \"description\": \"\",\n        \"name\": \"expanded\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"onExpansionChange\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onExpansionChange\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(_: boolean) => void\"\n        }\n      },\n      \"forceClose\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"forceClose\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"showTag\": {\n        \"defaultValue\": {\n          value: false\n        },\n        \"description\": \"\",\n        \"name\": \"showTag\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Card/Card.tsx#Card\"] = {\n      docgenInfo: Card.__docgenInfo,\n      name: \"Card\",\n      path: \"src/components/Card/Card.tsx#Card\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}","map":{"version":3,"sources":["/home/melanie/Code/component-library/src/components/Card/Card.tsx"],"names":["CardContext","createContext","isExpanded","toggleExpanded","Provider","CardProvider","appearance","className","expanded","onExpansionChange","forceClose","showTag","children","previousIsExpanded","setPreviousIsExpanded","useState","setIsExpanded","updateExpanded","useCallback","useEffect","cx","isValidElement","type","child","CardExpansion","Card","value","STORYBOOK_REACT_CLASSES","docgenInfo","name","path"],"mappings":"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","sourcesContent":["import React, {\n\tChildren,\n\tuseEffect,\n\tuseState,\n\tisValidElement,\n\tPropsWithChildren,\n\tcreateContext,\n\tuseCallback,\n} from 'react';\nimport cx from 'classnames';\nimport { Tag } from '..';\nimport { CardExpansion } from './CardExpansion';\n\ntype CardContextType = {\n\tisExpanded: boolean;\n\ttoggleExpanded: () => void;\n};\n\nconst CardContext = createContext<CardContextType>({\n\tisExpanded: false,\n\ttoggleExpanded: () => {},\n});\n\nconst { Provider: CardProvider } = CardContext;\nexport { CardContext };\n\nexport type CardProps = {\n\tappearance?: 'primary' | 'secondary';\n\tclassName?: string;\n\texpanded?: boolean;\n\tonExpansionChange?: (_: boolean) => void;\n\tforceClose?: boolean;\n\tshowTag?: boolean;\n};\n\nexport function Card({\n\tappearance,\n\tclassName,\n\texpanded = false,\n\tonExpansionChange,\n\tforceClose,\n\tshowTag = false,\n\tchildren,\n}: PropsWithChildren<CardProps>) {\n\tconst [previousIsExpanded, setPreviousIsExpanded] = useState<boolean>();\n\tconst [isExpanded, setIsExpanded] = useState(expanded);\n\tconst updateExpanded = useCallback(\n\t\t(_: boolean) => {\n\t\t\tsetPreviousIsExpanded(isExpanded);\n\t\t\tsetIsExpanded(_);\n\t\t},\n\t\t[setPreviousIsExpanded, setIsExpanded, isExpanded]\n\t);\n\tconst toggleExpanded = () => updateExpanded(!isExpanded);\n\n\tuseEffect(() => {\n\t\tif (onExpansionChange && previousIsExpanded !== undefined) {\n\t\t\tonExpansionChange(isExpanded);\n\t\t}\n\t}, [isExpanded, previousIsExpanded]);\n\n\tuseEffect(() => {\n\t\tif (forceClose) {\n\t\t\tupdateExpanded(false);\n\t\t}\n\t}, [forceClose, updateExpanded]);\n\n\treturn (\n\t\t<CardProvider\n\t\t\tvalue={{\n\t\t\t\tisExpanded,\n\t\t\t\ttoggleExpanded,\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName={cx(\n\t\t\t\t\t'oec-card',\n\t\t\t\t\t{\n\t\t\t\t\t\t[`oec-card--${appearance}`]: appearance,\n\t\t\t\t\t},\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{showTag && <Tag className=\"oec-card-tag\" text=\"NEW\" color=\"theme-color-primary\" />}\n\t\t\t\t<div className=\"oec-card-cell\">\n\t\t\t\t\t{Children.map(children, (child) => {\n\t\t\t\t\t\tif (!isValidElement(child)) {\n\t\t\t\t\t\t\tthrow new Error('Invalid card child element');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst type = typeof child.type === 'string' ? child.type : child.type.name;\n\t\t\t\t\t\tif (type !== CardExpansion.name) {\n\t\t\t\t\t\t\treturn child;\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={cx({\n\t\t\t\t\t\t'oec-card-divider': isExpanded,\n\t\t\t\t\t})}\n\t\t\t\t></div>\n\t\t\t\t{isExpanded && (\n\t\t\t\t\t<div className={cx('oec-card-cell', 'oec-card-expansion')}>\n\t\t\t\t\t\t{Children.map(children, (child) => {\n\t\t\t\t\t\t\tif (!isValidElement(child)) {\n\t\t\t\t\t\t\t\tthrow new Error('Invalid card child element');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst type = typeof child.type === 'string' ? child.type : child.type.name;\n\t\t\t\t\t\t\tif (type === CardExpansion.name) {\n\t\t\t\t\t\t\t\treturn child;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</CardProvider>\n\t);\n}\ntry {\n    // @ts-ignore\n    Card.displayName = \"Card\";\n    // @ts-ignore\n    Card.__docgenInfo = { \"description\": \"\", \"displayName\": \"Card\", \"props\": { \"appearance\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"appearance\", \"required\": false, \"type\": { \"name\": \"NavItemType\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"expanded\": { \"defaultValue\": { value: false }, \"description\": \"\", \"name\": \"expanded\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onExpansionChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onExpansionChange\", \"required\": false, \"type\": { \"name\": \"(_: boolean) => void\" } }, \"forceClose\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"forceClose\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"showTag\": { \"defaultValue\": { value: false }, \"description\": \"\", \"name\": \"showTag\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Card/Card.tsx#Card\"] = { docgenInfo: Card.__docgenInfo, name: \"Card\", path: \"src/components/Card/Card.tsx#Card\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}