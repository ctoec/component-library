{"ast":null,"code":"import _slicedToArray from \"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/app/src/components/DateInput/DateInput.tsx\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport moment from 'moment';\nimport cx from 'classnames';\nimport { DayPickerSingleDateController } from 'react-dates';\nimport { FieldSet, TextInput, Button } from '..';\nimport { ReactComponent as CalendarIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/calendar.svg\";\nimport { parseStringDateInput } from '../../utils/stringFormatters';\nvar momentFormat = 'MM/DD/YYYY';\nexport var DateInput = function DateInput(_ref) {\n  var _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? null : _ref$defaultValue,\n      inputOnChange_Old = _ref.onChange_Old,\n      inputOnChange = _ref.onChange,\n      id = _ref.id,\n      label = _ref.label,\n      disabled = _ref.disabled,\n      optional = _ref.optional,\n      inputStatus = _ref.status,\n      className = _ref.className,\n      _ref$hideHint = _ref.hideHint,\n      hideHint = _ref$hideHint === void 0 ? false : _ref$hideHint,\n      name = _ref.name,\n      _ref$forceBlur = _ref.forceBlur,\n      forceBlur = _ref$forceBlur === void 0 ? false : _ref$forceBlur;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      calendarOpen = _useState2[0],\n      setCalendarOpen = _useState2[1];\n\n  var _useState3 = useState(defaultValue ? moment.utc(defaultValue) : null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentDate = _useState4[0],\n      setCurrentDate = _useState4[1];\n\n  var _useState5 = useState(currentDate ? currentDate.format(momentFormat) : undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stringDate = _useState6[0],\n      setStringDate = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dateIsInvalid = _useState8[0],\n      setDateIsInvalid = _useState8[1]; // Attach onChange event listener\n\n\n  useEffect(function () {\n    var target = document.getElementById(\"\".concat(id, \"-internal\"));\n\n    if (!target || !inputOnChange) {\n      return;\n    }\n\n    target.addEventListener('change', inputOnChange);\n    return function () {\n      return window.removeEventListener('change', inputOnChange);\n    };\n  });\n  var onMomentChange = useCallback(function (input) {\n    // Whatever input is, set current date to that, even if it's not valid\n    setCurrentDate(input);\n\n    if (!input || !input.isValid()) {\n      setDateIsInvalid(true);\n    } else {\n      // Only call the callback if it's a valid date\n      // Spread operator will not copy prototype\n      // https://dmitripavlutin.com/object-rest-spread-properties-javascript/\n      inputOnChange_Old && inputOnChange_Old(Object.assign(moment(), input, {\n        name: name || ''\n      })); // Update the hidden input to a string representation of\n      // the date. Then trigger the event dispatch.\n\n      var target = document.getElementById(\"\".concat(id, \"-internal\"));\n\n      if (!target) {\n        return;\n      }\n\n      var event = new Event('change');\n      target.value = '' + input.valueOf();\n      target.dispatchEvent(event);\n      setDateIsInvalid(false);\n    }\n  }, [setCurrentDate, setDateIsInvalid, id, inputOnChange_Old, name]);\n  useEffect(function () {\n    if (forceBlur) {\n      onMomentChange(currentDate);\n    }\n  }, [forceBlur, onMomentChange, currentDate]);\n\n  var onStringDateChange = function onStringDateChange(input) {\n    if (!input && !currentDate) {\n      // If the new date didn't exist and there wasn't already a date, don't set a warning\n      return;\n    } // Called on blur or on enter-- not on string change because that would show a warning after one key stroke\n\n\n    var newDate = parseStringDateInput(input); // Otherwise if it's valid, proceed\n\n    onMomentChange(newDate);\n  };\n\n  var status = inputStatus;\n\n  if (dateIsInvalid) {\n    status = {\n      type: 'warning',\n      id: \"\".concat(id, \"-error\"),\n      message: 'Invalid date'\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(FieldSet, {\n    legend: label,\n    id: id,\n    hint: hideHint ? undefined : \"For example: \".concat(moment().format('MM/DD/YYYY')),\n    status: status,\n    optional: optional,\n    disabled: disabled,\n    className: cx('oec-date-input', 'oec-date-input-single', className),\n    showLegend: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    // Non-interactive input to play nice within a form component\n    \"aria-hidden\": true,\n    hidden: true,\n    disabled: true,\n    id: \"\".concat(id, \"-internal\"),\n    defaultValue: currentDate && !dateIsInvalid ? '' + currentDate.valueOf() : undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row flex-align-end grid-gap position-relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    label: label,\n    srOnlyLabel: true // Make label sr only because it's in a fieldset\n    ,\n    id: \"\".concat(id, \"-input\"),\n    onChange: function onChange(e) {\n      return setStringDate(e.target.value);\n    },\n    defaultValue: stringDate // Key forces re-render on default value change without making text input a controlled component\n    ,\n    key: JSON.stringify(currentDate),\n    onBlur: function onBlur() {\n      onStringDateChange(stringDate);\n    },\n    name: name,\n    className: \"oec-date-input__text\",\n    inputProps: {\n      onKeyUp: function onKeyUp(e) {\n        if (e.key === 'Enter') {\n          onStringDateChange(stringDate);\n        }\n      }\n    } // Pass only status type and id so that text input will style itself apprpriately but not duplicate the message\n    ,\n    status: status ? {\n      type: status.type,\n      id: status.id\n    } : undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"oec-calendar-dropdown oec-date-input__calendar-dropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: /*#__PURE__*/React.createElement(CalendarIcon, {\n      className: \"oec-calendar-toggle__icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }),\n    onClick: function onClick() {\n      setCalendarOpen(!calendarOpen);\n    },\n    title: \"\".concat(calendarOpen ? 'close' : 'open', \" calendar\"),\n    className: \"oec-calendar-toggle oec-calendar-dropdown__toggle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"oec-calendar-dropdown__calendar position-absolute z-top\",\n    hidden: !calendarOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(DayPickerSingleDateController // Key forces re-render, which helps deal with bugs in this library-- see scss file\n  , {\n    key: JSON.stringify({\n      stringDate: stringDate,\n      dateIsInvalid: dateIsInvalid,\n      currentDate: currentDate,\n      calendarOpen: calendarOpen\n    }),\n    date: currentDate,\n    onDateChange: function onDateChange(newDate) {\n      setStringDate(newDate ? newDate.format(momentFormat) : undefined);\n      onMomentChange(newDate);\n    },\n    focused: calendarOpen // Annoyingly this does not do anything for keyboard users\n    ,\n    onFocusChange: function onFocusChange(f) {\n      return setCalendarOpen(f.focused || false);\n    },\n    onBlur: function onBlur() {\n      return setCalendarOpen(false);\n    } // TODO: IMPLEMENT ON TAB ONCE TYPES FOR THIS LIBRARY ARE UPDATED :/\n    // onTab={() => {}}\n    ,\n    onOutsideClick: function onOutsideClick(e) {\n      var clickOnCalendarOrButton = e.target.closest(\"#\".concat(id, \" .oec-calendar-dropdown\")); // If a user clicks the button again, the button will handle closing it, and this would fire first and cause problems\n\n      if (!clickOnCalendarOrButton) {\n        setCalendarOpen(false);\n      }\n    },\n    initialVisibleMonth: function initialVisibleMonth() {\n      return currentDate || moment();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/app/src/components/DateInput/DateInput.tsx"],"names":["momentFormat","DateInput","defaultValue","onChange_Old","inputOnChange_Old","onChange","inputOnChange","id","label","disabled","optional","status","inputStatus","className","hideHint","name","forceBlur","calendarOpen","setCalendarOpen","useState","currentDate","setCurrentDate","moment","stringDate","setStringDate","dateIsInvalid","setDateIsInvalid","useEffect","target","document","window","onMomentChange","useCallback","input","event","onStringDateChange","newDate","parseStringDateInput","type","message","cx","e","JSON","onKeyUp","f","clickOnCalendarOrButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport moment, { Moment } from 'moment';\nimport cx from 'classnames';\nimport { DayPickerSingleDateController } from 'react-dates';\nimport { FieldSet, TextInput, FormStatusProps, Button } from '..';\nimport { ReactComponent as CalendarIcon } from '../../assets/images/calendar.svg';\nimport { parseStringDateInput } from '../../utils/stringFormatters';\nimport { InputField } from '../../utils/forms/form';\n\nexport type DateInputProps = {\n\tonChange_Old?: (newDate: InputField<Moment | null>) => any | void;\n\tonChange?: (ev: Event) => any;\n\tid: string;\n\tlabel: string;\n\tdefaultValue?: Date | null;\n\tdisabled?: boolean;\n\toptional?: boolean;\n\tstatus?: FormStatusProps;\n\tclassName?: string;\n\thideLabel?: boolean;\n\thideHint?: boolean;\n\tname?: string;\n\tforceBlur?: boolean;\n};\n\nconst momentFormat = 'MM/DD/YYYY';\n\nexport const DateInput: React.FC<DateInputProps> = ({\n\tdefaultValue = null,\n\tonChange_Old: inputOnChange_Old,\n\tonChange: inputOnChange,\n\tid,\n\tlabel,\n\tdisabled,\n\toptional,\n\tstatus: inputStatus,\n\tclassName,\n\thideHint = false,\n\tname,\n\tforceBlur = false,\n}) => {\n\tconst [calendarOpen, setCalendarOpen] = useState<boolean>(false);\n\tconst [currentDate, setCurrentDate] = useState(defaultValue ? moment.utc(defaultValue) : null);\n\tconst [stringDate, setStringDate] = useState<string | undefined>(\n\t\tcurrentDate ? currentDate.format(momentFormat) : undefined\n\t);\n\tconst [dateIsInvalid, setDateIsInvalid] = useState(false);\n\n\t// Attach onChange event listener\n\tuseEffect(() => {\n\t\tconst target = document.getElementById(`${id}-internal`);\n\t\tif (!target || !inputOnChange) {\n\t\t\treturn;\n\t\t}\n\t\ttarget.addEventListener('change', inputOnChange);\n\t\treturn () => window.removeEventListener('change', inputOnChange);\n\t});\n\n\tconst onMomentChange = useCallback(\n\t\t(input: Moment | null) => {\n\t\t\t// Whatever input is, set current date to that, even if it's not valid\n\t\t\tsetCurrentDate(input);\n\t\t\tif (!input || !input.isValid()) {\n\t\t\t\tsetDateIsInvalid(true);\n\t\t\t} else {\n\t\t\t\t// Only call the callback if it's a valid date\n\t\t\t\t// Spread operator will not copy prototype\n\t\t\t\t// https://dmitripavlutin.com/object-rest-spread-properties-javascript/\n\t\t\t\tinputOnChange_Old &&\n\t\t\t\t\tinputOnChange_Old(Object.assign(moment(), input, { name: name || '' }));\n\t\t\t\t// Update the hidden input to a string representation of\n\t\t\t\t// the date. Then trigger the event dispatch.\n\t\t\t\tconst target = document.getElementById(`${id}-internal`);\n\t\t\t\tif (!target) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst event = new Event('change');\n\t\t\t\t(target as HTMLInputElement).value = '' + input.valueOf();\n\t\t\t\ttarget.dispatchEvent(event);\n\t\t\t\tsetDateIsInvalid(false);\n\t\t\t}\n\t\t},\n\t\t[setCurrentDate, setDateIsInvalid, id, inputOnChange_Old, name]\n\t);\n\n\tuseEffect(() => {\n\t\tif (forceBlur) {\n\t\t\tonMomentChange(currentDate);\n\t\t}\n\t}, [forceBlur, onMomentChange, currentDate]);\n\n\tconst onStringDateChange = (input: string | undefined) => {\n\t\tif (!input && !currentDate) {\n\t\t\t// If the new date didn't exist and there wasn't already a date, don't set a warning\n\t\t\treturn;\n\t\t}\n\t\t// Called on blur or on enter-- not on string change because that would show a warning after one key stroke\n\t\tconst newDate = parseStringDateInput(input);\n\t\t// Otherwise if it's valid, proceed\n\t\tonMomentChange(newDate);\n\t};\n\n\tlet status = inputStatus;\n\tif (dateIsInvalid) {\n\t\tstatus = { type: 'warning', id: `${id}-error`, message: 'Invalid date' };\n\t}\n\n\treturn (\n\t\t<FieldSet\n\t\t\tlegend={label}\n\t\t\tid={id}\n\t\t\thint={hideHint ? undefined : `For example: ${moment().format('MM/DD/YYYY')}`}\n\t\t\tstatus={status}\n\t\t\toptional={optional}\n\t\t\tdisabled={disabled}\n\t\t\tclassName={cx('oec-date-input', 'oec-date-input-single', className)}\n\t\t\tshowLegend={true}\n\t\t>\n\t\t\t<input\n\t\t\t\t// Non-interactive input to play nice within a form component\n\t\t\t\taria-hidden\n\t\t\t\thidden\n\t\t\t\tdisabled\n\t\t\t\tid={`${id}-internal`}\n\t\t\t\tdefaultValue={currentDate && !dateIsInvalid ? '' + currentDate.valueOf() : undefined}\n\t\t\t/>\n\t\t\t<div className=\"flex-row flex-align-end grid-gap position-relative\">\n\t\t\t\t<TextInput\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tsrOnlyLabel\n\t\t\t\t\t// Make label sr only because it's in a fieldset\n\t\t\t\t\tid={`${id}-input`}\n\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => setStringDate(e.target.value)}\n\t\t\t\t\tdefaultValue={stringDate}\n\t\t\t\t\t// Key forces re-render on default value change without making text input a controlled component\n\t\t\t\t\tkey={JSON.stringify(currentDate)}\n\t\t\t\t\tonBlur={() => {\n\t\t\t\t\t\tonStringDateChange(stringDate);\n\t\t\t\t\t}}\n\t\t\t\t\tname={name}\n\t\t\t\t\tclassName=\"oec-date-input__text\"\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tonKeyUp: (e: { key: string }) => {\n\t\t\t\t\t\t\tif (e.key === 'Enter') {\n\t\t\t\t\t\t\t\tonStringDateChange(stringDate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\t// Pass only status type and id so that text input will style itself apprpriately but not duplicate the message\n\t\t\t\t\tstatus={status ? { type: status.type, id: status.id } : undefined}\n\t\t\t\t/>\n\t\t\t\t<div className=\"oec-calendar-dropdown oec-date-input__calendar-dropdown\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttext={<CalendarIcon className=\"oec-calendar-toggle__icon\" />}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetCalendarOpen(!calendarOpen);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttitle={`${calendarOpen ? 'close' : 'open'} calendar`}\n\t\t\t\t\t\tclassName=\"oec-calendar-toggle oec-calendar-dropdown__toggle\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"oec-calendar-dropdown__calendar position-absolute z-top\"\n\t\t\t\t\t\thidden={!calendarOpen}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DayPickerSingleDateController\n\t\t\t\t\t\t\t// Key forces re-render, which helps deal with bugs in this library-- see scss file\n\t\t\t\t\t\t\tkey={JSON.stringify({ stringDate, dateIsInvalid, currentDate, calendarOpen })}\n\t\t\t\t\t\t\tdate={currentDate}\n\t\t\t\t\t\t\tonDateChange={(newDate) => {\n\t\t\t\t\t\t\t\tsetStringDate(newDate ? newDate.format(momentFormat) : undefined);\n\t\t\t\t\t\t\t\tonMomentChange(newDate);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tfocused={calendarOpen}\n\t\t\t\t\t\t\t// Annoyingly this does not do anything for keyboard users\n\t\t\t\t\t\t\tonFocusChange={(f) => setCalendarOpen(f.focused || false)}\n\t\t\t\t\t\t\tonBlur={() => setCalendarOpen(false)}\n\t\t\t\t\t\t\t// TODO: IMPLEMENT ON TAB ONCE TYPES FOR THIS LIBRARY ARE UPDATED :/\n\t\t\t\t\t\t\t// onTab={() => {}}\n\t\t\t\t\t\t\tonOutsideClick={(e) => {\n\t\t\t\t\t\t\t\tconst clickOnCalendarOrButton = e.target.closest(`#${id} .oec-calendar-dropdown`);\n\t\t\t\t\t\t\t\t// If a user clicks the button again, the button will handle closing it, and this would fire first and cause problems\n\t\t\t\t\t\t\t\tif (!clickOnCalendarOrButton) {\n\t\t\t\t\t\t\t\t\tsetCalendarOpen(false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tinitialVisibleMonth={() => currentDate || moment()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</FieldSet>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}