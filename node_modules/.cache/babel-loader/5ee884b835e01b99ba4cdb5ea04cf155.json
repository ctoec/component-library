{"ast":null,"code":"import{createContext,useContext}from'react';/**\n * Utility for casting the un-typed context to the generic with type parameter,\n * so that form consumers can have type-constrained data, dataDriller, and updateData\n * @param context\n */export function useGenericContext(context){var processedContext=useContext(context);return processedContext;}var FormContext=createContext({data:undefined,dataDriller:undefined,updateData:function updateData(_){}});var FormProvider=FormContext.Provider,FormConsumer=FormContext.Consumer;export{FormProvider,FormConsumer};export default FormContext;try{// @ts-ignore\nuseGenericContext.displayName=\"useGenericContext\";// @ts-ignore\nuseGenericContext.__docgenInfo={\"description\":\"Utility for casting the un-typed context to the generic with type parameter,\\nso that form consumers can have type-constrained data, dataDriller, and updateData\\n@param context\",\"displayName\":\"useGenericContext\",\"props\":{\"Provider\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Provider\",\"required\":true,\"type\":{\"name\":\"Provider<any>\"}},\"Consumer\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"Consumer\",\"required\":true,\"type\":{\"name\":\"Consumer<any>\"}},\"displayName\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"displayName\",\"required\":false,\"type\":{\"name\":\"string\"}}}};// @ts-ignore\nif(typeof STORYBOOK_REACT_CLASSES!==\"undefined\")// @ts-ignore\nSTORYBOOK_REACT_CLASSES[\"src/components/Form_New/FormContext.ts#useGenericContext\"]={docgenInfo:useGenericContext.__docgenInfo,name:\"useGenericContext\",path:\"src/components/Form_New/FormContext.ts#useGenericContext\"};}catch(__react_docgen_typescript_loader_error){}try{// @ts-ignore\nFormProvider.displayName=\"FormProvider\";// @ts-ignore\nFormProvider.__docgenInfo={\"description\":\"\",\"displayName\":\"FormProvider\",\"props\":{\"value\":{\"defaultValue\":null,\"description\":\"\",\"name\":\"value\",\"required\":true,\"type\":{\"name\":\"FormContextType\"}}}};// @ts-ignore\nif(typeof STORYBOOK_REACT_CLASSES!==\"undefined\")// @ts-ignore\nSTORYBOOK_REACT_CLASSES[\"src/components/Form_New/FormContext.ts#FormProvider\"]={docgenInfo:FormProvider.__docgenInfo,name:\"FormProvider\",path:\"src/components/Form_New/FormContext.ts#FormProvider\"};}catch(__react_docgen_typescript_loader_error){}try{// @ts-ignore\nFormConsumer.displayName=\"FormConsumer\";// @ts-ignore\nFormConsumer.__docgenInfo={\"description\":\"\",\"displayName\":\"FormConsumer\",\"props\":{}};// @ts-ignore\nif(typeof STORYBOOK_REACT_CLASSES!==\"undefined\")// @ts-ignore\nSTORYBOOK_REACT_CLASSES[\"src/components/Form_New/FormContext.ts#FormConsumer\"]={docgenInfo:FormConsumer.__docgenInfo,name:\"FormConsumer\",path:\"src/components/Form_New/FormContext.ts#FormConsumer\"};}catch(__react_docgen_typescript_loader_error){}","map":{"version":3,"sources":["/home/app/src/components/Form_New/FormContext.ts"],"names":["processedContext","useContext","FormContext","createContext","data","dataDriller","updateData","Provider","FormProvider","Consumer","FormConsumer","useGenericContext","STORYBOOK_REACT_CLASSES","docgenInfo","name","path"],"mappings":"AAAA,OAAA,aAAA,CAAA,UAAA,KAAA,OAAA,CAiCA;;;;GAKA,MAAO,SAAA,CAAA,iBAAA,CAAA,OAAA,CAAqD,CAC3D,GAAMA,CAAAA,gBAAgB,CAAGC,UAAU,CAAnC,OAAmC,CAAnC,CACA,MAAA,CAAA,gBAAA,CACA,CAED,GAAMC,CAAAA,WAAW,CAAGC,aAAa,CAAkB,CAClDC,IAAI,CAD8C,SAAA,CAElDC,WAAW,CAFuC,SAAA,CAGlDC,UAAU,CAAE,QAAA,CAAA,UAAA,CAAA,CAAA,CAAO,CAAE,CAH6B,CAAlB,CAAjC,C,GAMyBE,CAAAA,Y,CAAyCN,W,CAAnDK,Q,CAAkCG,Y,CAAiBR,W,CAA3BO,Q,mCACvC,cAAA,CAAA,WAAA,CACA,GAAI,CACA;AACAE,iBAAiB,CAAjBA,WAAAA,CAFA,mBAEAA,CACA;AACAA,iBAAiB,CAAjBA,YAAAA,CAAiC,CAAE,cAAF,kLAAA,CAAqM,cAArM,mBAAA,CAAyO,QAAS,CAAE,WAAY,CAAE,eAAF,IAAA,CAAwB,cAAxB,EAAA,CAA2C,OAA3C,UAAA,CAA+D,WAA/D,IAAA,CAAiF,OAAQ,CAAE,OAAQ,eAAV,CAAzF,CAAd,CAAsI,WAAY,CAAE,eAAF,IAAA,CAAwB,cAAxB,EAAA,CAA2C,OAA3C,UAAA,CAA+D,WAA/D,IAAA,CAAiF,OAAQ,CAAE,OAAQ,eAAV,CAAzF,CAAlJ,CAA0Q,cAAe,CAAE,eAAF,IAAA,CAAwB,cAAxB,EAAA,CAA2C,OAA3C,aAAA,CAAkE,WAAlE,KAAA,CAAqF,OAAQ,CAAE,OAAQ,QAAV,CAA7F,CAAzR,CAAlP,CAAjCA,CACA;AACA,GAAI,MAAA,CAAA,uBAAA,GAAJ,WAAA,CACI;AACAC,uBAAuB,CAAvBA,0DAAuB,CAAvBA,CAAsF,CAAEC,UAAU,CAAEF,iBAAiB,CAA/B,YAAA,CAA8CG,IAAI,CAAlD,mBAAA,CAAyEC,IAAI,CAAE,0DAA/E,CAAtFH,CARR,CAUA,MAAA,sCAAA,CAA+C,CAAG,CAAA,GAAI,CAClD;AACAJ,YAAY,CAAZA,WAAAA,CAFkD,cAElDA,CACA;AACAA,YAAY,CAAZA,YAAAA,CAA4B,CAAE,cAAF,EAAA,CAAqB,cAArB,cAAA,CAAoD,QAAS,CAAE,QAAS,CAAE,eAAF,IAAA,CAAwB,cAAxB,EAAA,CAA2C,OAA3C,OAAA,CAA4D,WAA5D,IAAA,CAA8E,OAAQ,CAAE,OAAQ,iBAAV,CAAtF,CAAX,CAA7D,CAA5BA,CACA;AACA,GAAI,MAAA,CAAA,uBAAA,GAAJ,WAAA,CACI;AACAI,uBAAuB,CAAvBA,qDAAuB,CAAvBA,CAAiF,CAAEC,UAAU,CAAEL,YAAY,CAA1B,YAAA,CAAyCM,IAAI,CAA7C,cAAA,CAA+DC,IAAI,CAAE,qDAArE,CAAjFH,CAR0C,CAUlD,MAAA,sCAAA,CAA+C,CAAG,CAAA,GAAI,CAClD;AACAF,YAAY,CAAZA,WAAAA,CAFkD,cAElDA,CACA;AACAA,YAAY,CAAZA,YAAAA,CAA4B,CAAE,cAAF,EAAA,CAAqB,cAArB,cAAA,CAAoD,QAAS,EAA7D,CAA5BA,CACA;AACA,GAAI,MAAA,CAAA,uBAAA,GAAJ,WAAA,CACI;AACAE,uBAAuB,CAAvBA,qDAAuB,CAAvBA,CAAiF,CAAEC,UAAU,CAAEH,YAAY,CAA1B,YAAA,CAAyCI,IAAI,CAA7C,cAAA,CAA+DC,IAAI,CAAE,qDAArE,CAAjFH,CAR0C,CAUlD,MAAA,sCAAA,CAA+C,CAAG","sourcesContent":["import { createContext, Context, useContext } from 'react';\nimport { TObjectDriller } from './ObjectDriller';\n\n/**\n * FormContext provides form data, data accessor, and data update function to any\n * components that are children of a Form\n *\n * @property data The data being tracked (displayed and updated) by the form.\n * This data should only get immutable updates, via the provided updateData function.\n *\n * @property dataDriller ObjectDriller wrapper on form data, provided for convenience\n * to save all custom form fields from needing to create one.\n *\n * @property updateData Immutable update function for form data\n */\ntype FormContextType = {\n\tdata: any;\n\tdataDriller: any;\n\tupdateData: React.Dispatch<React.SetStateAction<any>>;\n};\n\n/**\n * The generic form context type, to support parameterized types for the context\n */\nexport type GenericFormContextType<T> = {\n\tdata: T;\n\tdataDriller: TObjectDriller<NonNullable<T>>;\n\t// Allows for function style update (setState(s => s) as opposed to setState(s))\n\t// Needed for components that make multiple edits to the same object\n\t// Otherwise just passing the object would result in one of the updates being\n\t// overwritten.\n\tupdateData: React.Dispatch<React.SetStateAction<T>>;\n};\n/**\n * Utility for casting the un-typed context to the generic with type parameter,\n * so that form consumers can have type-constrained data, dataDriller, and updateData\n * @param context\n */\nexport function useGenericContext<S>(context: Context<any>) {\n\tconst processedContext = useContext(context);\n\treturn processedContext as GenericFormContextType<S>;\n}\n\nconst FormContext = createContext<FormContextType>({\n\tdata: undefined,\n\tdataDriller: undefined,\n\tupdateData: (_) => {},\n});\n\nexport const { Provider: FormProvider, Consumer: FormConsumer } = FormContext;\nexport default FormContext;\ntry {\n    // @ts-ignore\n    useGenericContext.displayName = \"useGenericContext\";\n    // @ts-ignore\n    useGenericContext.__docgenInfo = { \"description\": \"Utility for casting the un-typed context to the generic with type parameter,\\nso that form consumers can have type-constrained data, dataDriller, and updateData\\n@param context\", \"displayName\": \"useGenericContext\", \"props\": { \"Provider\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"Provider\", \"required\": true, \"type\": { \"name\": \"Provider<any>\" } }, \"Consumer\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"Consumer\", \"required\": true, \"type\": { \"name\": \"Consumer<any>\" } }, \"displayName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"displayName\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Form_New/FormContext.ts#useGenericContext\"] = { docgenInfo: useGenericContext.__docgenInfo, name: \"useGenericContext\", path: \"src/components/Form_New/FormContext.ts#useGenericContext\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    FormProvider.displayName = \"FormProvider\";\n    // @ts-ignore\n    FormProvider.__docgenInfo = { \"description\": \"\", \"displayName\": \"FormProvider\", \"props\": { \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"FormContextType\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Form_New/FormContext.ts#FormProvider\"] = { docgenInfo: FormProvider.__docgenInfo, name: \"FormProvider\", path: \"src/components/Form_New/FormContext.ts#FormProvider\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    FormConsumer.displayName = \"FormConsumer\";\n    // @ts-ignore\n    FormConsumer.__docgenInfo = { \"description\": \"\", \"displayName\": \"FormConsumer\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Form_New/FormContext.ts#FormConsumer\"] = { docgenInfo: FormConsumer.__docgenInfo, name: \"FormConsumer\", path: \"src/components/Form_New/FormContext.ts#FormConsumer\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}