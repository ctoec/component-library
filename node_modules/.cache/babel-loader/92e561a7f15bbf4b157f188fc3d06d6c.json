{"ast":null,"code":"var _jsxFileName = \"/home/app/src/components/TextWithIcon/TextWithIcon.tsx\";\nimport React from 'react';\nimport cx from 'classnames'; // AKA Old Iconsides\n\nexport function TextWithIcon(_ref) {\n  var text = _ref.text,\n      Icon = _ref.Icon,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? 'right' : _ref$direction,\n      _ref$iconSide = _ref.iconSide,\n      iconSide = _ref$iconSide === void 0 ? 'left' : _ref$iconSide,\n      className = _ref.className,\n      userSuppliedIconClassName = _ref.iconClassName;\n  var iconClassName = \"oec-text-with-icon__icon oec-text-with-icon__icon--direction-\".concat(direction, \" oec-text-with-icon__icon--side-\").concat(iconSide);\n  var icon = /*#__PURE__*/React.createElement(Icon, {\n    className: cx(iconClassName, userSuppliedIconClassName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: cx('oec-text-with-icon', className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  }, icon && iconSide === 'left' && icon, text, icon && iconSide === 'right' && icon);\n}\n\ntry {\n  // @ts-ignore\n  TextWithIcon.displayName = \"TextWithIcon\"; // @ts-ignore\n\n  TextWithIcon.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"TextWithIcon\",\n    \"props\": {\n      \"Icon\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"Icon\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"any\"\n        }\n      },\n      \"text\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"text\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"direction\": {\n        \"defaultValue\": {\n          value: \"right\"\n        },\n        \"description\": \"\",\n        \"name\": \"direction\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"\\\"left\\\" | \\\"right\\\" | \\\"up\\\" | \\\"down\\\"\"\n        }\n      },\n      \"iconSide\": {\n        \"defaultValue\": {\n          value: \"left\"\n        },\n        \"description\": \"\",\n        \"name\": \"iconSide\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"\\\"left\\\" | \\\"right\\\"\"\n        }\n      },\n      \"className\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"className\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"iconClassName\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"iconClassName\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/TextWithIcon/TextWithIcon.tsx#TextWithIcon\"] = {\n      docgenInfo: TextWithIcon.__docgenInfo,\n      name: \"TextWithIcon\",\n      path: \"src/components/TextWithIcon/TextWithIcon.tsx#TextWithIcon\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}","map":{"version":3,"sources":["/home/app/src/components/TextWithIcon/TextWithIcon.tsx"],"names":["text","Icon","direction","iconSide","className","iconClassName","userSuppliedIconClassName","icon","cx","TextWithIcon","value","STORYBOOK_REACT_CLASSES","docgenInfo","name","path"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\n\nexport type TextWithIconProps = {\n\tIcon: React.FunctionComponent<\n\t\tReact.SVGProps<SVGSVGElement> & {\n\t\t\ttitle?: string | undefined;\n\t\t}\n\t>;\n\ttext: string;\n\tdirection?: 'left' | 'right' | 'up' | 'down';\n\ticonSide?: 'left' | 'right';\n\tclassName?: string;\n\ticonClassName?: string;\n};\n\n// AKA Old Iconsides\nexport function TextWithIcon({\n\ttext,\n\tIcon,\n\tdirection = 'right',\n\ticonSide = 'left',\n\tclassName,\n\ticonClassName: userSuppliedIconClassName,\n}: TextWithIconProps) {\n\tconst iconClassName = `oec-text-with-icon__icon oec-text-with-icon__icon--direction-${direction} oec-text-with-icon__icon--side-${iconSide}`;\n\tconst icon = <Icon className={cx(iconClassName, userSuppliedIconClassName)} />;\n\n\treturn (\n\t\t<span className={cx('oec-text-with-icon', className)}>\n\t\t\t{icon && iconSide === 'left' && icon}\n\t\t\t{text}\n\t\t\t{icon && iconSide === 'right' && icon}\n\t\t</span>\n\t);\n}\ntry {\n    // @ts-ignore\n    TextWithIcon.displayName = \"TextWithIcon\";\n    // @ts-ignore\n    TextWithIcon.__docgenInfo = { \"description\": \"\", \"displayName\": \"TextWithIcon\", \"props\": { \"Icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"Icon\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"text\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"text\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"direction\": { \"defaultValue\": { value: \"right\" }, \"description\": \"\", \"name\": \"direction\", \"required\": false, \"type\": { \"name\": \"\\\"left\\\" | \\\"right\\\" | \\\"up\\\" | \\\"down\\\"\" } }, \"iconSide\": { \"defaultValue\": { value: \"left\" }, \"description\": \"\", \"name\": \"iconSide\", \"required\": false, \"type\": { \"name\": \"\\\"left\\\" | \\\"right\\\"\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"iconClassName\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"iconClassName\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/TextWithIcon/TextWithIcon.tsx#TextWithIcon\"] = { docgenInfo: TextWithIcon.__docgenInfo, name: \"TextWithIcon\", path: \"src/components/TextWithIcon/TextWithIcon.tsx#TextWithIcon\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}