{"ast":null,"code":"var _jsxFileName = \"/home/app/src/components/Button/Button.tsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport function Button(_ref) {\n  var text = _ref.text,\n      onClick = _ref.onClick,\n      href = _ref.href,\n      external = _ref.external,\n      appearance = _ref.appearance,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      title = _ref.title;\n  var classString = 'usa-button' + (appearance && appearance !== 'default' ? ' usa-button--' + appearance : '') + (className ? ' ' + className : '');\n\n  if (onClick === 'submit') {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      className: classString,\n      disabled: disabled,\n      type: \"submit\",\n      value: text // Value will never actually be an element for a submit button but TS doesn't know that\n      ,\n      title: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }\n    });\n  }\n\n  onClick = typeof onClick === 'function' ? onClick : function () {};\n\n  if (href && !external) {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: href,\n      className: classString,\n      onClick: onClick,\n      title: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 4\n      }\n    }, text);\n  }\n\n  if (href && external) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: href,\n      className: classString,\n      onClick: onClick,\n      title: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }\n    }, text);\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: classString,\n    disabled: disabled,\n    onClick: onClick,\n    type: \"button\",\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }, text);\n}\nButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Button\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Button/Button.tsx\"] = {\n    name: \"Button\",\n    docgenInfo: Button.__docgenInfo,\n    path: \"src/components/Button/Button.tsx\"\n  };\n}","map":{"version":3,"sources":["/home/app/src/components/Button/Button.tsx"],"names":["React","Link","Button","text","onClick","href","external","appearance","disabled","className","title","classString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAwBA,OAAO,SAASC,MAAT,OAS6B;AAAA,MARnCC,IAQmC,QARnCA,IAQmC;AAAA,MAPnCC,OAOmC,QAPnCA,OAOmC;AAAA,MANnCC,IAMmC,QANnCA,IAMmC;AAAA,MALnCC,QAKmC,QALnCA,QAKmC;AAAA,MAJnCC,UAImC,QAJnCA,UAImC;AAAA,MAHnCC,QAGmC,QAHnCA,QAGmC;AAAA,MAFnCC,SAEmC,QAFnCA,SAEmC;AAAA,MADnCC,KACmC,QADnCA,KACmC;AACnC,MAAMC,WAAW,GAChB,gBACCJ,UAAU,IAAIA,UAAU,KAAK,SAA7B,GAAyC,kBAAkBA,UAA3D,GAAwE,EADzE,KAECE,SAAS,GAAG,MAAMA,SAAT,GAAqB,EAF/B,CADD;;AAKA,MAAIL,OAAO,KAAK,QAAhB,EAA0B;AACzB,wBACC;AACC,MAAA,SAAS,EAAEO,WADZ;AAEC,MAAA,QAAQ,EAAEH,QAFX;AAGC,MAAA,IAAI,EAAC,QAHN;AAIC,MAAA,KAAK,EAAEL,IAJR,CAKC;AALD;AAMC,MAAA,KAAK,EAAEO,KANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAUA;;AACDN,EAAAA,OAAO,GAAG,OAAOA,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0C,YAAM,CAAE,CAA5D;;AAEA,MAAIC,IAAI,IAAI,CAACC,QAAb,EAAuB;AACtB,wBACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAED,IAAV;AAAgB,MAAA,SAAS,EAAEM,WAA3B;AAAwC,MAAA,OAAO,EAAEP,OAAjD;AAA0D,MAAA,KAAK,EAAEM,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEP,IADF,CADD;AAKA;;AAED,MAAIE,IAAI,IAAIC,QAAZ,EAAsB;AACrB,wBACC;AAAG,MAAA,IAAI,EAAED,IAAT;AAAe,MAAA,SAAS,EAAEM,WAA1B;AAAuC,MAAA,OAAO,EAAEP,OAAhD;AAAyD,MAAA,KAAK,EAAEM,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEP,IADF,CADD;AAKA;;AAED,sBACC;AACC,IAAA,SAAS,EAAEQ,WADZ;AAEC,IAAA,QAAQ,EAAEH,QAFX;AAGC,IAAA,OAAO,EAAEJ,OAHV;AAIC,IAAA,IAAI,EAAC,QAJN;AAKC,IAAA,KAAK,EAAEM,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOEP,IAPF,CADD;AAWA","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\ntype ButtonAppearance = 'default' | 'base' | 'secondary' | 'unstyled' | 'outline';\n\ntype BaseButtonProps = {\n\thref?: string;\n\texternal?: boolean;\n\tappearance?: ButtonAppearance;\n\tdisabled?: boolean;\n\tclassName?: string;\n};\n\nexport type ButtonProps = BaseButtonProps &\n\tReact.HTMLProps<HTMLButtonElement | HTMLAnchorElement> & {\n\t\ttext: string | JSX.Element;\n\t\tonClick?: () => any;\n\t};\n\ntype SubmitButtonProps = BaseButtonProps & {\n\ttext: string;\n\tonClick?: 'submit';\n\ttitle?: string;\n};\n\nexport function Button({\n\ttext,\n\tonClick,\n\thref,\n\texternal,\n\tappearance,\n\tdisabled,\n\tclassName,\n\ttitle,\n}: ButtonProps | SubmitButtonProps) {\n\tconst classString =\n\t\t'usa-button' +\n\t\t(appearance && appearance !== 'default' ? ' usa-button--' + appearance : '') +\n\t\t(className ? ' ' + className : '');\n\n\tif (onClick === 'submit') {\n\t\treturn (\n\t\t\t<input\n\t\t\t\tclassName={classString}\n\t\t\t\tdisabled={disabled}\n\t\t\t\ttype=\"submit\"\n\t\t\t\tvalue={text as string}\n\t\t\t\t// Value will never actually be an element for a submit button but TS doesn't know that\n\t\t\t\ttitle={title}\n\t\t\t/>\n\t\t);\n\t}\n\tonClick = typeof onClick === 'function' ? onClick : () => {};\n\n\tif (href && !external) {\n\t\treturn (\n\t\t\t<Link to={href} className={classString} onClick={onClick} title={title}>\n\t\t\t\t{text}\n\t\t\t</Link>\n\t\t);\n\t}\n\n\tif (href && external) {\n\t\treturn (\n\t\t\t<a href={href} className={classString} onClick={onClick} title={title}>\n\t\t\t\t{text}\n\t\t\t</a>\n\t\t);\n\t}\n\n\treturn (\n\t\t<button\n\t\t\tclassName={classString}\n\t\t\tdisabled={disabled}\n\t\t\tonClick={onClick}\n\t\t\ttype=\"button\"\n\t\t\ttitle={title}\n\t\t>\n\t\t\t{text}\n\t\t</button>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}