{"ast":null,"code":"import _objectWithoutProperties from\"/home/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import FormContext,{useGenericContext}from'./FormContext';import{FieldSet}from'../FieldSet/FieldSet';/**\n * Generic fieldset component for use within a Form.\n * FormFieldSet has an optional status function, which\n * determines fieldset status based on the form data,\n * to which this FormFieldSet has access via the FormContext.\n */export var FormFieldSet=function FormFieldSet(_ref){var _ref$status=_ref.status,status=_ref$status===void 0?function(){return undefined;}:_ref$status,children=_ref.children,props=_objectWithoutProperties(_ref,[\"status\",\"children\"]);var _useGenericContext=useGenericContext(FormContext),dataDriller=_useGenericContext.dataDriller;return/*#__PURE__*/React.createElement(FieldSet,Object.assign({status:status(dataDriller)},props),children);};try{// @ts-ignore\nFormFieldSet.displayName=\"FormFieldSet\";// @ts-ignore\nFormFieldSet.__docgenInfo={\"description\":\"Generic fieldset component for use within a Form.\\nFormFieldSet has an optional status function, which\\ndetermines fieldset status based on the form data,\\nto which this FormFieldSet has access via the FormContext.\",\"displayName\":\"FormFieldSet\",\"props\":{\"status\":{\"defaultValue\":{value:\"() => undefined\"},\"description\":\"\",\"name\":\"status\",\"required\":false,\"type\":{\"name\":\"any\"}}}};// @ts-ignore\nif(typeof STORYBOOK_REACT_CLASSES!==\"undefined\")// @ts-ignore\nSTORYBOOK_REACT_CLASSES[\"src/components/Form_New/FormFieldSet.tsx#FormFieldSet\"]={docgenInfo:FormFieldSet.__docgenInfo,name:\"FormFieldSet\",path:\"src/components/Form_New/FormFieldSet.tsx#FormFieldSet\"};}catch(__react_docgen_typescript_loader_error){}","map":{"version":3,"sources":["/home/app/src/components/Form_New/FormFieldSet.tsx"],"names":["FormFieldSet","status","children","props","dataDriller","useGenericContext","value","STORYBOOK_REACT_CLASSES","docgenInfo","name","path"],"mappings":"oJAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,WAAA,EAAA,iBAAA,KAAA,eAAA,CACA,OAAA,QAAA,KAAA,sBAAA,CAOA;;;;;GAMA,MAAO,IAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAA,IAAA,CAIuB,CAAA,GAAA,CAAA,WAAA,CAAA,IAAA,CAHlDC,MAGkD,CAHlDA,MAGkD,CAAA,WAAA,GAAA,IAAA,EAAA,CAHzC,UAAA,CAAA,MAAA,CAAA,SAAA,CAGyC,CAAA,CAAA,WAAA,CAFlDC,QAEkD,CAAA,IAAA,CAFlDA,QAEkD,CAD/CC,KAC+C,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA,CAAA,GAAA,CAAA,kBAAA,CAC1BE,iBAAiB,CADS,WACT,CADS,CAC1CD,WAD0C,CAAA,kBAAA,CAAA,WAAA,CAGlD,MAAA,aACC,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAU,MAAM,CAAEH,MAAM,CAAA,WAAA,CAAxB,CAAA,CAAA,KAAA,CAAA,CADD,QACC,CADD,CAPM,CAAA,CAaP,GAAI,CACA;AACAD,YAAY,CAAZA,WAAAA,CAFA,cAEAA,CACA;AACAA,YAAY,CAAZA,YAAAA,CAA4B,CAAE,cAAF,wNAAA,CAA2O,cAA3O,cAAA,CAA0Q,QAAS,CAAE,SAAU,CAAE,eAAgB,CAAEM,KAAK,CAAE,iBAAT,CAAlB,CAAgD,cAAhD,EAAA,CAAmE,OAAnE,QAAA,CAAqF,WAArF,KAAA,CAAwG,OAAQ,CAAE,OAAQ,KAAV,CAAhH,CAAZ,CAAnR,CAA5BN,CACA;AACA,GAAI,MAAA,CAAA,uBAAA,GAAJ,WAAA,CACI;AACAO,uBAAuB,CAAvBA,uDAAuB,CAAvBA,CAAmF,CAAEC,UAAU,CAAER,YAAY,CAA1B,YAAA,CAAyCS,IAAI,CAA7C,cAAA,CAA+DC,IAAI,CAAE,uDAArE,CAAnFH,CARR,CAUA,MAAA,sCAAA,CAA+C,CAAG","sourcesContent":["import React, { PropsWithChildren } from 'react';\nimport FormContext, { useGenericContext } from './FormContext';\nimport { FieldSetProps, FieldSet } from '../FieldSet/FieldSet';\nimport { FormStatusFunc } from './FormStatusFunc';\n\nexport type FormFieldSetProps<TData> = {\n\tstatus?: FormStatusFunc<TData>;\n} & Pick<FieldSetProps, Exclude<keyof FieldSetProps, 'status'>>;\n\n/**\n * Generic fieldset component for use within a Form.\n * FormFieldSet has an optional status function, which\n * determines fieldset status based on the form data,\n * to which this FormFieldSet has access via the FormContext.\n */\nexport const FormFieldSet = <TData extends object>({\n\tstatus = () => undefined,\n\tchildren,\n\t...props\n}: PropsWithChildren<FormFieldSetProps<TData>>) => {\n\tconst { dataDriller } = useGenericContext<TData>(FormContext);\n\n\treturn (\n\t\t<FieldSet status={status(dataDriller)} {...props}>\n\t\t\t{children}\n\t\t</FieldSet>\n\t);\n};\ntry {\n    // @ts-ignore\n    FormFieldSet.displayName = \"FormFieldSet\";\n    // @ts-ignore\n    FormFieldSet.__docgenInfo = { \"description\": \"Generic fieldset component for use within a Form.\\nFormFieldSet has an optional status function, which\\ndetermines fieldset status based on the form data,\\nto which this FormFieldSet has access via the FormContext.\", \"displayName\": \"FormFieldSet\", \"props\": { \"status\": { \"defaultValue\": { value: \"() => undefined\" }, \"description\": \"\", \"name\": \"status\", \"required\": false, \"type\": { \"name\": \"any\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Form_New/FormFieldSet.tsx#FormFieldSet\"] = { docgenInfo: FormFieldSet.__docgenInfo, name: \"FormFieldSet\", path: \"src/components/Form_New/FormFieldSet.tsx#FormFieldSet\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}